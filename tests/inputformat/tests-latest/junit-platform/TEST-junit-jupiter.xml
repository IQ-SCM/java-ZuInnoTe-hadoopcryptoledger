<?xml version="1.0" encoding="UTF-8"?>
<testsuite name="JUnit Jupiter" tests="257" skipped="0" failures="0" errors="0" time="4.133" hostname="travis-job-zuinnote-hadoopcryptole-394748584.travisci.net" timestamp="2018-06-20T21:13:04">
<properties>
<property name="awt.toolkit" value="sun.awt.X11.XToolkit"/>
<property name="file.encoding" value="UTF-8"/>
<property name="file.encoding.pkg" value="sun.io"/>
<property name="file.separator" value="/"/>
<property name="java.awt.graphicsenv" value="sun.awt.X11GraphicsEnvironment"/>
<property name="java.awt.printerjob" value="sun.print.PSPrinterJob"/>
<property name="java.class.path" value="/home/travis/build/ZuInnoTe/hadoopcryptoledger/inputformat/build/classes/java/test:/home/travis/build/ZuInnoTe/hadoopcryptoledger/inputformat/build/resources/test:/home/travis/build/ZuInnoTe/hadoopcryptoledger/inputformat/build/classes/java/main:/home/travis/build/ZuInnoTe/hadoopcryptoledger/inputformat/build/resources/main:/home/travis/.gradle/caches/modules-2/files-2.1/org.junit.jupiter/junit-jupiter-engine/5.1.1/92ae5e81f6459edc0fd1cb74612c910a01622c7/junit-jupiter-engine-5.1.1.jar:/home/travis/.gradle/caches/modules-2/files-2.1/org.junit.jupiter/junit-jupiter-api/5.1.1/fcca73c9c2825c9a966380c6d146a71acba233ca/junit-jupiter-api-5.1.1.jar:/home/travis/.gradle/caches/modules-2/files-2.1/org.junit.platform/junit-platform-engine/1.1.1/62af0a28f8c153b940e8abcb485f25dd07ffe633/junit-platform-engine-1.1.1.jar:/home/travis/.gradle/caches/modules-2/files-2.1/org.junit.platform/junit-platform-commons/1.1.1/36fca464a84454cf56ae2759a8ba18d6d99d1113/junit-platform-commons-1.1.1.jar:/home/travis/.gradle/caches/modules-2/files-2.1/org.apiguardian/apiguardian-api/1.0.0/3ef5276905e36f4d8055fe3cb0bdcc7503ffc85d/apiguardian-api-1.0.0.jar:/home/travis/.gradle/caches/modules-2/files-2.1/org.opentest4j/opentest4j/1.0.0/6f09c598e9ff64bf0ce2fa7e7de49a99ba83c0b4/opentest4j-1.0.0.jar:/home/travis/.gradle/caches/modules-2/files-2.1/org.bouncycastle/bcprov-ext-jdk15on/1.58/83a9e739d9c718180ba544fe007a67ca3a61cad/bcprov-ext-jdk15on-1.58.jar:/home/travis/.gradle/caches/modules-2/files-2.1/org.apache.hadoop/hadoop-common/2.7.0/b67be0ff22ae931d900c1a511cb7d777fd5b07c7/hadoop-common-2.7.0.jar:/home/travis/.gradle/caches/modules-2/files-2.1/org.apache.hadoop/hadoop-mapreduce-client-common/2.7.0/d0e43e6ef2b4df32b8e9721bd1ae0a647884b3ab/hadoop-mapreduce-client-common-2.7.0.jar:/home/travis/.gradle/caches/modules-2/files-2.1/org.apache.logging.log4j/log4j-api/2.9.1/7a2999229464e7a324aa503c0a52ec0f05efe7bd/log4j-api-2.9.1.jar:/home/travis/.gradle/caches/modules-2/files-2.1/org.apache.hadoop/hadoop-yarn-client/2.7.0/2d46d97a8bae442408a1db38c36c4de128aae763/hadoop-yarn-client-2.7.0.jar:/home/travis/.gradle/caches/modules-2/files-2.1/org.apache.hadoop/hadoop-mapreduce-client-core/2.7.0/4046f0a3e4adc3b6cc9e4f3b455eb0a954d01faf/hadoop-mapreduce-client-core-2.7.0.jar:/home/travis/.gradle/caches/modules-2/files-2.1/org.apache.hadoop/hadoop-yarn-server-common/2.7.0/97ddd9bc8fd2531dc4601c41be50763a9f63a905/hadoop-yarn-server-common-2.7.0.jar:/home/travis/.gradle/caches/modules-2/files-2.1/org.apache.hadoop/hadoop-yarn-common/2.7.0/acdcfa98feae91bc4ab7f72c5648d50163a74725/hadoop-yarn-common-2.7.0.jar:/home/travis/.gradle/caches/modules-2/files-2.1/org.apache.hadoop/hadoop-yarn-api/2.7.0/3f8445cfc9739af9fd593accc39d5c1102ee805a/hadoop-yarn-api-2.7.0.jar:/home/travis/.gradle/caches/modules-2/files-2.1/org.apache.hadoop/hadoop-annotations/2.7.0/ed3e60c290836577c1c6c37b853220e993837c94/hadoop-annotations-2.7.0.jar:/home/travis/.gradle/caches/modules-2/files-2.1/org.apache.hadoop/hadoop-auth/2.7.0/10351dee7ef55affc959f14b4357bbb00ed40ea0/hadoop-auth-2.7.0.jar:/home/travis/.gradle/caches/modules-2/files-2.1/org.apache.curator/curator-recipes/2.7.1/a2c180efc6a38a4f8c9197eb35bb4eb5716cd2fa/curator-recipes-2.7.1.jar:/home/travis/.gradle/caches/modules-2/files-2.1/org.apache.curator/curator-framework/2.7.1/8c7b1eeb78e43bb91ea737111ba3dec0512be876/curator-framework-2.7.1.jar:/home/travis/.gradle/caches/modules-2/files-2.1/org.apache.curator/curator-client/2.7.1/a591dfc085db3e9d4d480381cc7e6ae8a26b34af/curator-client-2.7.1.jar:/home/travis/.gradle/caches/modules-2/files-2.1/com.google.guava/guava/16.0.1/5fa98cd1a63c99a44dd8d3b77e4762b066a5d0c5/guava-16.0.1.jar:/home/travis/.gradle/caches/modules-2/files-2.1/commons-cli/commons-cli/1.2/2bf96b7aa8b611c177d329452af1dc933e14501c/commons-cli-1.2.jar:/home/travis/.gradle/caches/modules-2/files-2.1/org.apache.commons/commons-math3/3.1.1/6719d757a98ff24a83d9d727bef9cec83f59b6e1/commons-math3-3.1.1.jar:/home/travis/.gradle/caches/modules-2/files-2.1/xmlenc/xmlenc/0.52/d82554efbe65906d83b3d97bd7509289e9db561a/xmlenc-0.52.jar:/home/travis/.gradle/caches/modules-2/files-2.1/commons-httpclient/commons-httpclient/3.1/964cd74171f427720480efdec40a7c7f6e58426a/commons-httpclient-3.1.jar:/home/travis/.gradle/caches/modules-2/files-2.1/net.java.dev.jets3t/jets3t/0.9.0/792bc96ee7e57b89f472aa0cb5a31015b9f59c96/jets3t-0.9.0.jar:/home/travis/.gradle/caches/modules-2/files-2.1/org.apache.httpcomponents/httpclient/4.2.5/666e26e76f2e87d84e4f16acb546481ae1b8e9a6/httpclient-4.2.5.jar:/home/travis/.gradle/caches/modules-2/files-2.1/commons-codec/commons-codec/1.6/b7f0fc8f61ecadeb3695f0b9464755eee44374d4/commons-codec-1.6.jar:/home/travis/.gradle/caches/modules-2/files-2.1/commons-io/commons-io/2.4/b1b6ea3b7e4aa4f492509a4952029cd8e48019ad/commons-io-2.4.jar:/home/travis/.gradle/caches/modules-2/files-2.1/commons-net/commons-net/3.1/2298164a7c2484406f2aa5ac85b205d39019896f/commons-net-3.1.jar:/home/travis/.gradle/caches/modules-2/files-2.1/commons-configuration/commons-configuration/1.6/32cadde23955d7681b0d94a2715846d20b425235/commons-configuration-1.6.jar:/home/travis/.gradle/caches/modules-2/files-2.1/commons-collections/commons-collections/3.2.1/761ea405b9b37ced573d2df0d1e3a4e0f9edc668/commons-collections-3.2.1.jar:/home/travis/.gradle/caches/modules-2/files-2.1/javax.servlet/servlet-api/2.5/5959582d97d8b61f4d154ca9e495aafd16726e34/servlet-api-2.5.jar:/home/travis/.gradle/caches/modules-2/files-2.1/org.mortbay.jetty/jetty/6.1.26/2f546e289fddd5b1fab1d4199fbb6e9ef43ee4b0/jetty-6.1.26.jar:/home/travis/.gradle/caches/modules-2/files-2.1/org.mortbay.jetty/jetty-util/6.1.26/e5642fe0399814e1687d55a3862aa5a3417226a9/jetty-util-6.1.26.jar:/home/travis/.gradle/caches/modules-2/files-2.1/javax.servlet.jsp/jsp-api/2.1/63f943103f250ef1f3a4d5e94d145a0f961f5316/jsp-api-2.1.jar:/home/travis/.gradle/caches/modules-2/files-2.1/com.sun.jersey/jersey-json/1.9/1aa73e1896bcc7013fed247157d7f676226eb432/jersey-json-1.9.jar:/home/travis/.gradle/caches/modules-2/files-2.1/com.sun.jersey.contribs/jersey-guice/1.9/5963c28c47df7e5d6ad34cec80c071c368777f7b/jersey-guice-1.9.jar:/home/travis/.gradle/caches/modules-2/files-2.1/com.sun.jersey/jersey-server/1.9/3a6ea7cc5e15c824953f9f3ece2201b634d90d18/jersey-server-1.9.jar:/home/travis/.gradle/caches/modules-2/files-2.1/com.sun.jersey/jersey-client/1.9/d3c4b2b5f89db32c96ceddcb863684821910a7bb/jersey-client-1.9.jar:/home/travis/.gradle/caches/modules-2/files-2.1/com.sun.jersey/jersey-core/1.9/8341846f18187013bb9e27e46b7ee00a6395daf4/jersey-core-1.9.jar:/home/travis/.gradle/caches/modules-2/files-2.1/commons-digester/commons-digester/1.8/dc6a73fdbd1fa3f0944e8497c6c872fa21dca37e/commons-digester-1.8.jar:/home/travis/.gradle/caches/modules-2/files-2.1/commons-beanutils/commons-beanutils-core/1.8.0/175dc721f87e4bc5cc0573f990e28c3cf9117508/commons-beanutils-core-1.8.0.jar:/home/travis/.gradle/caches/modules-2/files-2.1/commons-beanutils/commons-beanutils/1.7.0/5675fd96b29656504b86029551973d60fb41339b/commons-beanutils-1.7.0.jar:/home/travis/.gradle/caches/modules-2/files-2.1/commons-logging/commons-logging/1.1.3/f6f66e966c70a83ffbdb6f17a0919eaf7c8aca7f/commons-logging-1.1.3.jar:/home/travis/.gradle/caches/modules-2/files-2.1/org.apache.zookeeper/zookeeper/3.4.6/1b2502e29da1ebaade2357cd1de35a855fa3755/zookeeper-3.4.6.jar:/home/travis/.gradle/caches/modules-2/files-2.1/org.slf4j/slf4j-log4j12/1.7.10/b3eeae7d1765f988a1f45ea81517191315c69c9e/slf4j-log4j12-1.7.10.jar:/home/travis/.gradle/caches/modules-2/files-2.1/log4j/log4j/1.2.17/5af35056b4d257e4b64b9e8069c0746e8b08629f/log4j-1.2.17.jar:/home/travis/.gradle/caches/modules-2/files-2.1/commons-lang/commons-lang/2.6/ce1edb914c94ebc388f086c6827e8bdeec71ac2/commons-lang-2.6.jar:/home/travis/.gradle/caches/modules-2/files-2.1/org.apache.avro/avro/1.7.4/416e7030879814f52845b97f04bb50ecd1cef372/avro-1.7.4.jar:/home/travis/.gradle/caches/modules-2/files-2.1/org.apache.directory.server/apacheds-kerberos-codec/2.0.0-M15/1c16e4e477183641c5f0dd5cdecd27ec331bacb5/apacheds-kerberos-codec-2.0.0-M15.jar:/home/travis/.gradle/caches/modules-2/files-2.1/org.apache.directory.server/apacheds-i18n/2.0.0-M15/71c61c84683152ec2a6a65f3f96fe534e304fa22/apacheds-i18n-2.0.0-M15.jar:/home/travis/.gradle/caches/modules-2/files-2.1/org.apache.directory.api/api-asn1-api/1.0.0-M20/5e6486ffa3125ba44dc410ead166e1d6ba8ac76d/api-asn1-api-1.0.0-M20.jar:/home/travis/.gradle/caches/modules-2/files-2.1/org.apache.directory.api/api-util/1.0.0-M20/a871abf060b3cf83fc6dc4d7e3d151fce50ac3cb/api-util-1.0.0-M20.jar:/home/travis/.gradle/caches/modules-2/files-2.1/org.slf4j/slf4j-api/1.7.10/5b338f206827d88acd890739f400a9b7664e5984/slf4j-api-1.7.10.jar:/home/travis/.gradle/caches/modules-2/files-2.1/org.codehaus.jackson/jackson-jaxrs/1.9.13/534d72d2b9d6199dd531dfb27083dd4844082bba/jackson-jaxrs-1.9.13.jar:/home/travis/.gradle/caches/modules-2/files-2.1/org.codehaus.jackson/jackson-xc/1.9.13/e3480072bc95c202476ffa1de99ff7ee9149f29c/jackson-xc-1.9.13.jar:/home/travis/.gradle/caches/modules-2/files-2.1/org.codehaus.jackson/jackson-mapper-asl/1.9.13/1ee2f2bed0e5dd29d1cb155a166e6f8d50bbddb7/jackson-mapper-asl-1.9.13.jar:/home/travis/.gradle/caches/modules-2/files-2.1/org.codehaus.jackson/jackson-core-asl/1.9.13/3c304d70f42f832e0a86d45bd437f692129299a4/jackson-core-asl-1.9.13.jar:/home/travis/.gradle/caches/modules-2/files-2.1/com.google.protobuf/protobuf-java/2.5.0/a10732c76bfacdbd633a7eb0f7968b1059a65dfa/protobuf-java-2.5.0.jar:/home/travis/.gradle/caches/modules-2/files-2.1/com.google.code.gson/gson/2.2.4/a60a5e993c98c864010053cb901b7eab25306568/gson-2.2.4.jar:/home/travis/.gradle/caches/modules-2/files-2.1/com.jcraft/jsch/0.1.42/a86104b0f2e0c0bab5b0df836065823a99b5e334/jsch-0.1.42.jar:/home/travis/.gradle/caches/modules-2/files-2.1/com.google.code.findbugs/jsr305/3.0.0/5871fb60dc68d67da54a663c3fd636a10a532948/jsr305-3.0.0.jar:/home/travis/.gradle/caches/modules-2/files-2.1/org.apache.htrace/htrace-core/3.1.0-incubating/f73606e7c9ede5802335c290bf47490ad6d51df3/htrace-core-3.1.0-incubating.jar:/home/travis/.gradle/caches/modules-2/files-2.1/org.apache.commons/commons-compress/1.4.1/b02e84a993d88568417536240e970c4b809126fd/commons-compress-1.4.1.jar:/home/travis/.gradle/caches/modules-2/files-2.1/com.google.inject.extensions/guice-servlet/3.0/610cde0e8da5a8b7d8efb8f0b8987466ffebaaf9/guice-servlet-3.0.jar:/home/travis/.gradle/caches/modules-2/files-2.1/io.netty/netty/3.7.0.Final/7a8c35599c68c0bf383df74469aa3e03d9aca87/netty-3.7.0.Final.jar:/home/travis/.gradle/caches/modules-2/files-2.1/org.codehaus.jettison/jettison/1.1/1a01a2a1218fcf9faa2cc2a6ced025bdea687262/jettison-1.1.jar:/home/travis/.gradle/caches/modules-2/files-2.1/com.sun.xml.bind/jaxb-impl/2.2.3-1/56baae106392040a45a06d4a41099173425da1e6/jaxb-impl-2.2.3-1.jar:/home/travis/.gradle/caches/modules-2/files-2.1/com.google.inject/guice/3.0/9d84f15fe35e2c716a02979fb62f50a29f38aefa/guice-3.0.jar:/home/travis/.gradle/caches/modules-2/files-2.1/org.sonatype.sisu.inject/cglib/2.2.1-v20090111/7ce5e983fd0e6c78346f4c9cbfa39d83049dda2/cglib-2.2.1-v20090111.jar:/home/travis/.gradle/caches/modules-2/files-2.1/asm/asm/3.1/c157def142714c544bdea2e6144645702adf7097/asm-3.1.jar:/home/travis/.gradle/caches/modules-2/files-2.1/org.apache.httpcomponents/httpcore/4.2.4/3b7f38df6de5dd8b500e602ae8c2dd5ee446f883/httpcore-4.2.4.jar:/home/travis/.gradle/caches/modules-2/files-2.1/com.jamesmurty.utils/java-xmlbuilder/0.4/ac5962e48cdee3a0a6e1f8e00fcb594747ac5aaf/java-xmlbuilder-0.4.jar:/home/travis/.gradle/caches/modules-2/files-2.1/com.thoughtworks.paranamer/paranamer/2.3/4a85963a752c0a2f715c3924bfc686865e7e1bc6/paranamer-2.3.jar:/home/travis/.gradle/caches/modules-2/files-2.1/org.xerial.snappy/snappy-java/1.0.4.1/f88b89a5a21a466aeb0ecf0c063605bd584b4947/snappy-java-1.0.4.1.jar:/home/travis/.gradle/caches/modules-2/files-2.1/jline/jline/0.9.94/99a18e9a44834afdebc467294e1138364c207402/jline-0.9.94.jar:/home/travis/.gradle/caches/modules-2/files-2.1/org.tukaani/xz/1.0/ecff5cb8b1189514c9d1d8d68eb77ac372e000c9/xz-1.0.jar:/home/travis/.gradle/caches/modules-2/files-2.1/javax.xml.bind/jaxb-api/2.2.2/aeb3021ca93dde265796d82015beecdcff95bf09/jaxb-api-2.2.2.jar:/home/travis/.gradle/caches/modules-2/files-2.1/org.fusesource.leveldbjni/leveldbjni-all/1.8/707350a2eeb1fa2ed77a32ddb3893ed308e941db/leveldbjni-all-1.8.jar:/home/travis/.gradle/caches/modules-2/files-2.1/javax.xml.stream/stax-api/1.0-2/d6337b0de8b25e53e81b922352fbea9f9f57ba0b/stax-api-1.0-2.jar:/home/travis/.gradle/caches/modules-2/files-2.1/javax.activation/activation/1.1/e6cb541461c2834bdea3eb920f1884d1eb508b50/activation-1.1.jar:/home/travis/.gradle/caches/modules-2/files-2.1/javax.inject/javax.inject/1/6975da39a7040257bd51d21a231b76c915872d38/javax.inject-1.jar:/home/travis/.gradle/caches/modules-2/files-2.1/aopalliance/aopalliance/1.0/235ba8b489512805ac13a8f9ea77a1ca5ebe3e8/aopalliance-1.0.jar:/home/travis/.gradle/caches/modules-2/files-2.1/junit/junit/3.8.1/99129f16442844f6a4a11ae22fbbee40b14d774f/junit-3.8.1.jar:/home/travis/.gradle/caches/modules-2/files-2.1/org.junit.platform/junit-platform-console/1.1.1/be5fc85283343805b20707480ba63bb8f6169d01/junit-platform-console-1.1.1.jar:/home/travis/.gradle/caches/modules-2/files-2.1/org.junit.platform/junit-platform-launcher/1.1.1/7ba76f577d8a2193f8e6e5a4bd0dd2a30ffce549/junit-platform-launcher-1.1.1.jar:build/tmp/expandedArchives/org.jacoco.agent-0.8.1.jar_8059ed6e1ab8b88aac5d9097fad847bb/jacocoagent.jar"/>
<property name="java.class.version" value="52.0"/>
<property name="java.endorsed.dirs" value="/usr/lib/jvm/java-8-oracle/jre/lib/endorsed"/>
<property name="java.ext.dirs" value="/usr/lib/jvm/java-8-oracle/jre/lib/ext:/usr/java/packages/lib/ext"/>
<property name="java.home" value="/usr/lib/jvm/java-8-oracle/jre"/>
<property name="java.io.tmpdir" value="/tmp"/>
<property name="java.library.path" value="/usr/java/packages/lib/amd64:/usr/lib64:/lib64:/lib:/usr/lib"/>
<property name="java.runtime.name" value="Java(TM) SE Runtime Environment"/>
<property name="java.runtime.version" value="1.8.0_151-b12"/>
<property name="java.specification.name" value="Java Platform API Specification"/>
<property name="java.specification.vendor" value="Oracle Corporation"/>
<property name="java.specification.version" value="1.8"/>
<property name="java.vendor" value="Oracle Corporation"/>
<property name="java.vendor.url" value="http://java.oracle.com/"/>
<property name="java.vendor.url.bug" value="http://bugreport.sun.com/bugreport/"/>
<property name="java.version" value="1.8.0_151"/>
<property name="java.vm.info" value="mixed mode"/>
<property name="java.vm.name" value="Java HotSpot(TM) 64-Bit Server VM"/>
<property name="java.vm.specification.name" value="Java Virtual Machine Specification"/>
<property name="java.vm.specification.vendor" value="Oracle Corporation"/>
<property name="java.vm.specification.version" value="1.8"/>
<property name="java.vm.vendor" value="Oracle Corporation"/>
<property name="java.vm.version" value="25.151-b12"/>
<property name="line.separator" value="
"/>
<property name="os.arch" value="amd64"/>
<property name="os.name" value="Linux"/>
<property name="os.version" value="4.14.12-041412-generic"/>
<property name="path.separator" value=":"/>
<property name="sun.arch.data.model" value="64"/>
<property name="sun.boot.class.path" value="/usr/lib/jvm/java-8-oracle/jre/lib/resources.jar:/usr/lib/jvm/java-8-oracle/jre/lib/rt.jar:/usr/lib/jvm/java-8-oracle/jre/lib/sunrsasign.jar:/usr/lib/jvm/java-8-oracle/jre/lib/jsse.jar:/usr/lib/jvm/java-8-oracle/jre/lib/jce.jar:/usr/lib/jvm/java-8-oracle/jre/lib/charsets.jar:/usr/lib/jvm/java-8-oracle/jre/lib/jfr.jar:/usr/lib/jvm/java-8-oracle/jre/classes"/>
<property name="sun.boot.library.path" value="/usr/lib/jvm/java-8-oracle/jre/lib/amd64"/>
<property name="sun.cpu.endian" value="little"/>
<property name="sun.cpu.isalist" value=""/>
<property name="sun.io.unicode.encoding" value="UnicodeLittle"/>
<property name="sun.java.command" value="org.junit.platform.console.ConsoleLauncher --details NONE --scan-class-path /home/travis/build/ZuInnoTe/hadoopcryptoledger/inputformat/build/classes/java/integrationTest:/home/travis/build/ZuInnoTe/hadoopcryptoledger/inputformat/build/resources/integrationTest:/home/travis/build/ZuInnoTe/hadoopcryptoledger/inputformat/build/classes/java/main:/home/travis/build/ZuInnoTe/hadoopcryptoledger/inputformat/build/resources/main:/home/travis/build/ZuInnoTe/hadoopcryptoledger/inputformat/build/classes/java/test:/home/travis/build/ZuInnoTe/hadoopcryptoledger/inputformat/build/resources/test -n ^.*Tests?$ --reports-dir /home/travis/build/ZuInnoTe/hadoopcryptoledger/inputformat/build/test-results/junit-platform"/>
<property name="sun.java.launcher" value="SUN_STANDARD"/>
<property name="sun.jnu.encoding" value="UTF-8"/>
<property name="sun.management.compiler" value="HotSpot 64-Bit Tiered Compilers"/>
<property name="sun.os.patch.level" value="unknown"/>
<property name="user.country" value="US"/>
<property name="user.dir" value="/home/travis/build/ZuInnoTe/hadoopcryptoledger/inputformat"/>
<property name="user.home" value="/home/travis"/>
<property name="user.language" value="en"/>
<property name="user.name" value="travis"/>
<property name="user.timezone" value="UTC"/>
<property name="user.variant" value=""/>
</properties>
<testcase name="checkTestDataVersion3BlockAvailable()" classname="org.zuinnote.hadoop.bitcoin.format.common.BitcoinFormatReaderTest" time="0.024">
<system-out><![CDATA[
unique-id: [engine:junit-jupiter]/[class:org.zuinnote.hadoop.bitcoin.format.common.BitcoinFormatReaderTest]/[method:checkTestDataVersion3BlockAvailable()]
display-name: checkTestDataVersion3BlockAvailable()
]]></system-out>
</testcase>
<testcase name="seekBlockStartHeap()" classname="org.zuinnote.hadoop.bitcoin.format.common.BitcoinFormatReaderTest" time="0.071">
<system-out><![CDATA[
unique-id: [engine:junit-jupiter]/[class:org.zuinnote.hadoop.bitcoin.format.common.BitcoinFormatReaderTest]/[method:seekBlockStartHeap()]
display-name: seekBlockStartHeap()
]]></system-out>
</testcase>
<testcase name="parseVersion1BlockAsBitcoinRawBlockHeap()" classname="org.zuinnote.hadoop.bitcoin.format.common.BitcoinFormatReaderTest" time="0.001">
<system-out><![CDATA[
unique-id: [engine:junit-jupiter]/[class:org.zuinnote.hadoop.bitcoin.format.common.BitcoinFormatReaderTest]/[method:parseVersion1BlockAsBitcoinRawBlockHeap()]
display-name: parseVersion1BlockAsBitcoinRawBlockHeap()
]]></system-out>
</testcase>
<testcase name="parseMultiNetBlockAsBitcoinBlockHeap()" classname="org.zuinnote.hadoop.bitcoin.format.common.BitcoinFormatReaderTest" time="0.032">
<system-out><![CDATA[
unique-id: [engine:junit-jupiter]/[class:org.zuinnote.hadoop.bitcoin.format.common.BitcoinFormatReaderTest]/[method:parseMultiNetBlockAsBitcoinBlockHeap()]
display-name: parseMultiNetBlockAsBitcoinBlockHeap()
]]></system-out>
</testcase>
<testcase name="checkTestDataScriptWitnessNetAvailable()" classname="org.zuinnote.hadoop.bitcoin.format.common.BitcoinFormatReaderTest" time="0">
<system-out><![CDATA[
unique-id: [engine:junit-jupiter]/[class:org.zuinnote.hadoop.bitcoin.format.common.BitcoinFormatReaderTest]/[method:checkTestDataScriptWitnessNetAvailable()]
display-name: checkTestDataScriptWitnessNetAvailable()
]]></system-out>
</testcase>
<testcase name="checkTestDataTestnet3GenesisBlockAvailable()" classname="org.zuinnote.hadoop.bitcoin.format.common.BitcoinFormatReaderTest" time="0">
<system-out><![CDATA[
unique-id: [engine:junit-jupiter]/[class:org.zuinnote.hadoop.bitcoin.format.common.BitcoinFormatReaderTest]/[method:checkTestDataTestnet3GenesisBlockAvailable()]
display-name: checkTestDataTestnet3GenesisBlockAvailable()
]]></system-out>
</testcase>
<testcase name="parseVersion4BlockAsBitcoinRawBlockDirect()" classname="org.zuinnote.hadoop.bitcoin.format.common.BitcoinFormatReaderTest" time="0.008">
<system-out><![CDATA[
unique-id: [engine:junit-jupiter]/[class:org.zuinnote.hadoop.bitcoin.format.common.BitcoinFormatReaderTest]/[method:parseVersion4BlockAsBitcoinRawBlockDirect()]
display-name: parseVersion4BlockAsBitcoinRawBlockDirect()
]]></system-out>
</testcase>
<testcase name="parseVersion2BlockAsBitcoinRawBlockHeap()" classname="org.zuinnote.hadoop.bitcoin.format.common.BitcoinFormatReaderTest" time="0.001">
<system-out><![CDATA[
unique-id: [engine:junit-jupiter]/[class:org.zuinnote.hadoop.bitcoin.format.common.BitcoinFormatReaderTest]/[method:parseVersion2BlockAsBitcoinRawBlockHeap()]
display-name: parseVersion2BlockAsBitcoinRawBlockHeap()
]]></system-out>
</testcase>
<testcase name="seekBlockStartDirect()" classname="org.zuinnote.hadoop.bitcoin.format.common.BitcoinFormatReaderTest" time="0.005">
<system-out><![CDATA[
unique-id: [engine:junit-jupiter]/[class:org.zuinnote.hadoop.bitcoin.format.common.BitcoinFormatReaderTest]/[method:seekBlockStartDirect()]
display-name: seekBlockStartDirect()
]]></system-out>
</testcase>
<testcase name="parseTestNet3Version4BlockAsBitcoinRawBlockDirect()" classname="org.zuinnote.hadoop.bitcoin.format.common.BitcoinFormatReaderTest" time="0.006">
<system-out><![CDATA[
unique-id: [engine:junit-jupiter]/[class:org.zuinnote.hadoop.bitcoin.format.common.BitcoinFormatReaderTest]/[method:parseTestNet3Version4BlockAsBitcoinRawBlockDirect()]
display-name: parseTestNet3Version4BlockAsBitcoinRawBlockDirect()
]]></system-out>
</testcase>
<testcase name="parseScriptWitnessBlockAsBitcoinBlockHeap()" classname="org.zuinnote.hadoop.bitcoin.format.common.BitcoinFormatReaderTest" time="0.009">
<system-out><![CDATA[
unique-id: [engine:junit-jupiter]/[class:org.zuinnote.hadoop.bitcoin.format.common.BitcoinFormatReaderTest]/[method:parseScriptWitnessBlockAsBitcoinBlockHeap()]
display-name: parseScriptWitnessBlockAsBitcoinBlockHeap()
]]></system-out>
</testcase>
<testcase name="checkTestDataVersion1BlockAvailable()" classname="org.zuinnote.hadoop.bitcoin.format.common.BitcoinFormatReaderTest" time="0">
<system-out><![CDATA[
unique-id: [engine:junit-jupiter]/[class:org.zuinnote.hadoop.bitcoin.format.common.BitcoinFormatReaderTest]/[method:checkTestDataVersion1BlockAvailable()]
display-name: checkTestDataVersion1BlockAvailable()
]]></system-out>
</testcase>
<testcase name="parseScriptWitness2BlockAsBitcoinRawBlockHeap()" classname="org.zuinnote.hadoop.bitcoin.format.common.BitcoinFormatReaderTest" time="0.003">
<system-out><![CDATA[
unique-id: [engine:junit-jupiter]/[class:org.zuinnote.hadoop.bitcoin.format.common.BitcoinFormatReaderTest]/[method:parseScriptWitness2BlockAsBitcoinRawBlockHeap()]
display-name: parseScriptWitness2BlockAsBitcoinRawBlockHeap()
]]></system-out>
</testcase>
<testcase name="parseScriptWitnessBlockAsBitcoinRawBlockHeap()" classname="org.zuinnote.hadoop.bitcoin.format.common.BitcoinFormatReaderTest" time="0.001">
<system-out><![CDATA[
unique-id: [engine:junit-jupiter]/[class:org.zuinnote.hadoop.bitcoin.format.common.BitcoinFormatReaderTest]/[method:parseScriptWitnessBlockAsBitcoinRawBlockHeap()]
display-name: parseScriptWitnessBlockAsBitcoinRawBlockHeap()
]]></system-out>
</testcase>
<testcase name="checkTestDataVersion4BlockAvailable()" classname="org.zuinnote.hadoop.bitcoin.format.common.BitcoinFormatReaderTest" time="0.001">
<system-out><![CDATA[
unique-id: [engine:junit-jupiter]/[class:org.zuinnote.hadoop.bitcoin.format.common.BitcoinFormatReaderTest]/[method:checkTestDataVersion4BlockAvailable()]
display-name: checkTestDataVersion4BlockAvailable()
]]></system-out>
</testcase>
<testcase name="parseScriptWitnessBlockAsBitcoinBlockDirect()" classname="org.zuinnote.hadoop.bitcoin.format.common.BitcoinFormatReaderTest" time="0.014">
<system-out><![CDATA[
unique-id: [engine:junit-jupiter]/[class:org.zuinnote.hadoop.bitcoin.format.common.BitcoinFormatReaderTest]/[method:parseScriptWitnessBlockAsBitcoinBlockDirect()]
display-name: parseScriptWitnessBlockAsBitcoinBlockDirect()
]]></system-out>
</testcase>
<testcase name="parseVersion3BlockAsBitcoinRawBlockHeap()" classname="org.zuinnote.hadoop.bitcoin.format.common.BitcoinFormatReaderTest" time="0.002">
<system-out><![CDATA[
unique-id: [engine:junit-jupiter]/[class:org.zuinnote.hadoop.bitcoin.format.common.BitcoinFormatReaderTest]/[method:parseVersion3BlockAsBitcoinRawBlockHeap()]
display-name: parseVersion3BlockAsBitcoinRawBlockHeap()
]]></system-out>
</testcase>
<testcase name="parseGenesisBlockAsBitcoinBlockDirect()" classname="org.zuinnote.hadoop.bitcoin.format.common.BitcoinFormatReaderTest" time="0.005">
<system-out><![CDATA[
unique-id: [engine:junit-jupiter]/[class:org.zuinnote.hadoop.bitcoin.format.common.BitcoinFormatReaderTest]/[method:parseGenesisBlockAsBitcoinBlockDirect()]
display-name: parseGenesisBlockAsBitcoinBlockDirect()
]]></system-out>
</testcase>
<testcase name="parseTestNet3GenesisBlockAsBitcoinRawBlockDirect()" classname="org.zuinnote.hadoop.bitcoin.format.common.BitcoinFormatReaderTest" time="0.007">
<system-out><![CDATA[
unique-id: [engine:junit-jupiter]/[class:org.zuinnote.hadoop.bitcoin.format.common.BitcoinFormatReaderTest]/[method:parseTestNet3GenesisBlockAsBitcoinRawBlockDirect()]
display-name: parseTestNet3GenesisBlockAsBitcoinRawBlockDirect()
]]></system-out>
</testcase>
<testcase name="parseTestNet3Version4BlockAsBitcoinRawBlockHeap()" classname="org.zuinnote.hadoop.bitcoin.format.common.BitcoinFormatReaderTest" time="0.001">
<system-out><![CDATA[
unique-id: [engine:junit-jupiter]/[class:org.zuinnote.hadoop.bitcoin.format.common.BitcoinFormatReaderTest]/[method:parseTestNet3Version4BlockAsBitcoinRawBlockHeap()]
display-name: parseTestNet3Version4BlockAsBitcoinRawBlockHeap()
]]></system-out>
</testcase>
<testcase name="parseGenesisBlockAsBitcoinBlockHeap()" classname="org.zuinnote.hadoop.bitcoin.format.common.BitcoinFormatReaderTest" time="0.003">
<system-out><![CDATA[
unique-id: [engine:junit-jupiter]/[class:org.zuinnote.hadoop.bitcoin.format.common.BitcoinFormatReaderTest]/[method:parseGenesisBlockAsBitcoinBlockHeap()]
display-name: parseGenesisBlockAsBitcoinBlockHeap()
]]></system-out>
</testcase>
<testcase name="parseGenesisBlockAsBitcoinRawBlockDirect()" classname="org.zuinnote.hadoop.bitcoin.format.common.BitcoinFormatReaderTest" time="0.005">
<system-out><![CDATA[
unique-id: [engine:junit-jupiter]/[class:org.zuinnote.hadoop.bitcoin.format.common.BitcoinFormatReaderTest]/[method:parseGenesisBlockAsBitcoinRawBlockDirect()]
display-name: parseGenesisBlockAsBitcoinRawBlockDirect()
]]></system-out>
</testcase>
<testcase name="checkTestDataVersion1SeekBlockAvailable()" classname="org.zuinnote.hadoop.bitcoin.format.common.BitcoinFormatReaderTest" time="0">
<system-out><![CDATA[
unique-id: [engine:junit-jupiter]/[class:org.zuinnote.hadoop.bitcoin.format.common.BitcoinFormatReaderTest]/[method:checkTestDataVersion1SeekBlockAvailable()]
display-name: checkTestDataVersion1SeekBlockAvailable()
]]></system-out>
</testcase>
<testcase name="parseVersion4BlockAsBitcoinBlockHeap()" classname="org.zuinnote.hadoop.bitcoin.format.common.BitcoinFormatReaderTest" time="0.032">
<system-out><![CDATA[
unique-id: [engine:junit-jupiter]/[class:org.zuinnote.hadoop.bitcoin.format.common.BitcoinFormatReaderTest]/[method:parseVersion4BlockAsBitcoinBlockHeap()]
display-name: parseVersion4BlockAsBitcoinBlockHeap()
]]></system-out>
</testcase>
<testcase name="parseScriptWitness2BlockAsBitcoinRawBlockDirect()" classname="org.zuinnote.hadoop.bitcoin.format.common.BitcoinFormatReaderTest" time="0.007">
<system-out><![CDATA[
unique-id: [engine:junit-jupiter]/[class:org.zuinnote.hadoop.bitcoin.format.common.BitcoinFormatReaderTest]/[method:parseScriptWitness2BlockAsBitcoinRawBlockDirect()]
display-name: parseScriptWitness2BlockAsBitcoinRawBlockDirect()
]]></system-out>
</testcase>
<testcase name="parseTestNet3GenesisBlockAsBitcoinBlockDirect()" classname="org.zuinnote.hadoop.bitcoin.format.common.BitcoinFormatReaderTest" time="0.006">
<system-out><![CDATA[
unique-id: [engine:junit-jupiter]/[class:org.zuinnote.hadoop.bitcoin.format.common.BitcoinFormatReaderTest]/[method:parseTestNet3GenesisBlockAsBitcoinBlockDirect()]
display-name: parseTestNet3GenesisBlockAsBitcoinBlockDirect()
]]></system-out>
</testcase>
<testcase name="checkTestDataTestnet3Version4BlockAvailable()" classname="org.zuinnote.hadoop.bitcoin.format.common.BitcoinFormatReaderTest" time="0">
<system-out><![CDATA[
unique-id: [engine:junit-jupiter]/[class:org.zuinnote.hadoop.bitcoin.format.common.BitcoinFormatReaderTest]/[method:checkTestDataTestnet3Version4BlockAvailable()]
display-name: checkTestDataTestnet3Version4BlockAvailable()
]]></system-out>
</testcase>
<testcase name="parseVersion3BlockAsBitcoinBlockHeap()" classname="org.zuinnote.hadoop.bitcoin.format.common.BitcoinFormatReaderTest" time="0.006">
<system-out><![CDATA[
unique-id: [engine:junit-jupiter]/[class:org.zuinnote.hadoop.bitcoin.format.common.BitcoinFormatReaderTest]/[method:parseVersion3BlockAsBitcoinBlockHeap()]
display-name: parseVersion3BlockAsBitcoinBlockHeap()
]]></system-out>
</testcase>
<testcase name="checkTestDataVersion2BlockAvailable()" classname="org.zuinnote.hadoop.bitcoin.format.common.BitcoinFormatReaderTest" time="0">
<system-out><![CDATA[
unique-id: [engine:junit-jupiter]/[class:org.zuinnote.hadoop.bitcoin.format.common.BitcoinFormatReaderTest]/[method:checkTestDataVersion2BlockAvailable()]
display-name: checkTestDataVersion2BlockAvailable()
]]></system-out>
</testcase>
<testcase name="parseVersion1BlockAsBitcoinRawBlockDirect()" classname="org.zuinnote.hadoop.bitcoin.format.common.BitcoinFormatReaderTest" time="0.006">
<system-out><![CDATA[
unique-id: [engine:junit-jupiter]/[class:org.zuinnote.hadoop.bitcoin.format.common.BitcoinFormatReaderTest]/[method:parseVersion1BlockAsBitcoinRawBlockDirect()]
display-name: parseVersion1BlockAsBitcoinRawBlockDirect()
]]></system-out>
</testcase>
<testcase name="parseVersion2BlockAsBitcoinBlockHeap()" classname="org.zuinnote.hadoop.bitcoin.format.common.BitcoinFormatReaderTest" time="0.003">
<system-out><![CDATA[
unique-id: [engine:junit-jupiter]/[class:org.zuinnote.hadoop.bitcoin.format.common.BitcoinFormatReaderTest]/[method:parseVersion2BlockAsBitcoinBlockHeap()]
display-name: parseVersion2BlockAsBitcoinBlockHeap()
]]></system-out>
</testcase>
<testcase name="parseVersion1BlockAsBitcoinBlockHeap()" classname="org.zuinnote.hadoop.bitcoin.format.common.BitcoinFormatReaderTest" time="0.001">
<system-out><![CDATA[
unique-id: [engine:junit-jupiter]/[class:org.zuinnote.hadoop.bitcoin.format.common.BitcoinFormatReaderTest]/[method:parseVersion1BlockAsBitcoinBlockHeap()]
display-name: parseVersion1BlockAsBitcoinBlockHeap()
]]></system-out>
</testcase>
<testcase name="parseVersion4BlockAsBitcoinRawBlockHeap()" classname="org.zuinnote.hadoop.bitcoin.format.common.BitcoinFormatReaderTest" time="0.001">
<system-out><![CDATA[
unique-id: [engine:junit-jupiter]/[class:org.zuinnote.hadoop.bitcoin.format.common.BitcoinFormatReaderTest]/[method:parseVersion4BlockAsBitcoinRawBlockHeap()]
display-name: parseVersion4BlockAsBitcoinRawBlockHeap()
]]></system-out>
</testcase>
<testcase name="checkTestDataScriptWitness2NetAvailable()" classname="org.zuinnote.hadoop.bitcoin.format.common.BitcoinFormatReaderTest" time="0">
<system-out><![CDATA[
unique-id: [engine:junit-jupiter]/[class:org.zuinnote.hadoop.bitcoin.format.common.BitcoinFormatReaderTest]/[method:checkTestDataScriptWitness2NetAvailable()]
display-name: checkTestDataScriptWitness2NetAvailable()
]]></system-out>
</testcase>
<testcase name="parseScriptWitness2BlockAsBitcoinBlockDirect()" classname="org.zuinnote.hadoop.bitcoin.format.common.BitcoinFormatReaderTest" time="0.026">
<system-out><![CDATA[
unique-id: [engine:junit-jupiter]/[class:org.zuinnote.hadoop.bitcoin.format.common.BitcoinFormatReaderTest]/[method:parseScriptWitness2BlockAsBitcoinBlockDirect()]
display-name: parseScriptWitness2BlockAsBitcoinBlockDirect()
]]></system-out>
</testcase>
<testcase name="parseScriptWitnessBlockAsBitcoinRawBlockDirect()" classname="org.zuinnote.hadoop.bitcoin.format.common.BitcoinFormatReaderTest" time="0.005">
<system-out><![CDATA[
unique-id: [engine:junit-jupiter]/[class:org.zuinnote.hadoop.bitcoin.format.common.BitcoinFormatReaderTest]/[method:parseScriptWitnessBlockAsBitcoinRawBlockDirect()]
display-name: parseScriptWitnessBlockAsBitcoinRawBlockDirect()
]]></system-out>
</testcase>
<testcase name="parseTestNet3GenesisBlockAsBitcoinRawBlockHeap()" classname="org.zuinnote.hadoop.bitcoin.format.common.BitcoinFormatReaderTest" time="0.001">
<system-out><![CDATA[
unique-id: [engine:junit-jupiter]/[class:org.zuinnote.hadoop.bitcoin.format.common.BitcoinFormatReaderTest]/[method:parseTestNet3GenesisBlockAsBitcoinRawBlockHeap()]
display-name: parseTestNet3GenesisBlockAsBitcoinRawBlockHeap()
]]></system-out>
</testcase>
<testcase name="parseScriptWitness2BlockAsBitcoinBlockHeap()" classname="org.zuinnote.hadoop.bitcoin.format.common.BitcoinFormatReaderTest" time="0.015">
<system-out><![CDATA[
unique-id: [engine:junit-jupiter]/[class:org.zuinnote.hadoop.bitcoin.format.common.BitcoinFormatReaderTest]/[method:parseScriptWitness2BlockAsBitcoinBlockHeap()]
display-name: parseScriptWitness2BlockAsBitcoinBlockHeap()
]]></system-out>
</testcase>
<testcase name="parseTestNet3Version4BlockAsBitcoinBlockHeap()" classname="org.zuinnote.hadoop.bitcoin.format.common.BitcoinFormatReaderTest" time="0.007">
<system-out><![CDATA[
unique-id: [engine:junit-jupiter]/[class:org.zuinnote.hadoop.bitcoin.format.common.BitcoinFormatReaderTest]/[method:parseTestNet3Version4BlockAsBitcoinBlockHeap()]
display-name: parseTestNet3Version4BlockAsBitcoinBlockHeap()
]]></system-out>
</testcase>
<testcase name="getKeyFromRawBlockHeap()" classname="org.zuinnote.hadoop.bitcoin.format.common.BitcoinFormatReaderTest" time="0.005">
<system-out><![CDATA[
unique-id: [engine:junit-jupiter]/[class:org.zuinnote.hadoop.bitcoin.format.common.BitcoinFormatReaderTest]/[method:getKeyFromRawBlockHeap()]
display-name: getKeyFromRawBlockHeap()
]]></system-out>
</testcase>
<testcase name="checkTestDataGenesisBlockAvailable()" classname="org.zuinnote.hadoop.bitcoin.format.common.BitcoinFormatReaderTest" time="0.007">
<system-out><![CDATA[
unique-id: [engine:junit-jupiter]/[class:org.zuinnote.hadoop.bitcoin.format.common.BitcoinFormatReaderTest]/[method:checkTestDataGenesisBlockAvailable()]
display-name: checkTestDataGenesisBlockAvailable()
]]></system-out>
</testcase>
<testcase name="parseTestNet3Version4BlockAsBitcoinBlockDirect()" classname="org.zuinnote.hadoop.bitcoin.format.common.BitcoinFormatReaderTest" time="0.012">
<system-out><![CDATA[
unique-id: [engine:junit-jupiter]/[class:org.zuinnote.hadoop.bitcoin.format.common.BitcoinFormatReaderTest]/[method:parseTestNet3Version4BlockAsBitcoinBlockDirect()]
display-name: parseTestNet3Version4BlockAsBitcoinBlockDirect()
]]></system-out>
</testcase>
<testcase name="parseTestNet3GenesisBlockAsBitcoinBlockHeap()" classname="org.zuinnote.hadoop.bitcoin.format.common.BitcoinFormatReaderTest" time="0.001">
<system-out><![CDATA[
unique-id: [engine:junit-jupiter]/[class:org.zuinnote.hadoop.bitcoin.format.common.BitcoinFormatReaderTest]/[method:parseTestNet3GenesisBlockAsBitcoinBlockHeap()]
display-name: parseTestNet3GenesisBlockAsBitcoinBlockHeap()
]]></system-out>
</testcase>
<testcase name="parseVersion2BlockAsBitcoinRawBlockDirect()" classname="org.zuinnote.hadoop.bitcoin.format.common.BitcoinFormatReaderTest" time="0.007">
<system-out><![CDATA[
unique-id: [engine:junit-jupiter]/[class:org.zuinnote.hadoop.bitcoin.format.common.BitcoinFormatReaderTest]/[method:parseVersion2BlockAsBitcoinRawBlockDirect()]
display-name: parseVersion2BlockAsBitcoinRawBlockDirect()
]]></system-out>
</testcase>
<testcase name="parseMultiNetAsBitcoinRawBlockHeap()" classname="org.zuinnote.hadoop.bitcoin.format.common.BitcoinFormatReaderTest" time="0.001">
<system-out><![CDATA[
unique-id: [engine:junit-jupiter]/[class:org.zuinnote.hadoop.bitcoin.format.common.BitcoinFormatReaderTest]/[method:parseMultiNetAsBitcoinRawBlockHeap()]
display-name: parseMultiNetAsBitcoinRawBlockHeap()
]]></system-out>
</testcase>
<testcase name="checkTestDataMultiNetAvailable()" classname="org.zuinnote.hadoop.bitcoin.format.common.BitcoinFormatReaderTest" time="0">
<system-out><![CDATA[
unique-id: [engine:junit-jupiter]/[class:org.zuinnote.hadoop.bitcoin.format.common.BitcoinFormatReaderTest]/[method:checkTestDataMultiNetAvailable()]
display-name: checkTestDataMultiNetAvailable()
]]></system-out>
</testcase>
<testcase name="parseGenesisBlockAsBitcoinRawBlockHeap()" classname="org.zuinnote.hadoop.bitcoin.format.common.BitcoinFormatReaderTest" time="0">
<system-out><![CDATA[
unique-id: [engine:junit-jupiter]/[class:org.zuinnote.hadoop.bitcoin.format.common.BitcoinFormatReaderTest]/[method:parseGenesisBlockAsBitcoinRawBlockHeap()]
display-name: parseGenesisBlockAsBitcoinRawBlockHeap()
]]></system-out>
</testcase>
<testcase name="parseVersion1BlockAsBitcoinBlockDirect()" classname="org.zuinnote.hadoop.bitcoin.format.common.BitcoinFormatReaderTest" time="0.005">
<system-out><![CDATA[
unique-id: [engine:junit-jupiter]/[class:org.zuinnote.hadoop.bitcoin.format.common.BitcoinFormatReaderTest]/[method:parseVersion1BlockAsBitcoinBlockDirect()]
display-name: parseVersion1BlockAsBitcoinBlockDirect()
]]></system-out>
</testcase>
<testcase name="parseVersion2BlockAsBitcoinBlockDirect()" classname="org.zuinnote.hadoop.bitcoin.format.common.BitcoinFormatReaderTest" time="0.007">
<system-out><![CDATA[
unique-id: [engine:junit-jupiter]/[class:org.zuinnote.hadoop.bitcoin.format.common.BitcoinFormatReaderTest]/[method:parseVersion2BlockAsBitcoinBlockDirect()]
display-name: parseVersion2BlockAsBitcoinBlockDirect()
]]></system-out>
</testcase>
<testcase name="parseVersion3BlockAsBitcoinBlockDirect()" classname="org.zuinnote.hadoop.bitcoin.format.common.BitcoinFormatReaderTest" time="0.012">
<system-out><![CDATA[
unique-id: [engine:junit-jupiter]/[class:org.zuinnote.hadoop.bitcoin.format.common.BitcoinFormatReaderTest]/[method:parseVersion3BlockAsBitcoinBlockDirect()]
display-name: parseVersion3BlockAsBitcoinBlockDirect()
]]></system-out>
</testcase>
<testcase name="parseVersion4BlockAsBitcoinBlockDirect()" classname="org.zuinnote.hadoop.bitcoin.format.common.BitcoinFormatReaderTest" time="0.012">
<system-out><![CDATA[
unique-id: [engine:junit-jupiter]/[class:org.zuinnote.hadoop.bitcoin.format.common.BitcoinFormatReaderTest]/[method:parseVersion4BlockAsBitcoinBlockDirect()]
display-name: parseVersion4BlockAsBitcoinBlockDirect()
]]></system-out>
</testcase>
<testcase name="getKeyFromRawBlockDirect()" classname="org.zuinnote.hadoop.bitcoin.format.common.BitcoinFormatReaderTest" time="0.005">
<system-out><![CDATA[
unique-id: [engine:junit-jupiter]/[class:org.zuinnote.hadoop.bitcoin.format.common.BitcoinFormatReaderTest]/[method:getKeyFromRawBlockDirect()]
display-name: getKeyFromRawBlockDirect()
]]></system-out>
</testcase>
<testcase name="parseMultiNetBlockAsBitcoinBlockDirect()" classname="org.zuinnote.hadoop.bitcoin.format.common.BitcoinFormatReaderTest" time="0.014">
<system-out><![CDATA[
unique-id: [engine:junit-jupiter]/[class:org.zuinnote.hadoop.bitcoin.format.common.BitcoinFormatReaderTest]/[method:parseMultiNetBlockAsBitcoinBlockDirect()]
display-name: parseMultiNetBlockAsBitcoinBlockDirect()
]]></system-out>
</testcase>
<testcase name="parseVersion3BlockAsBitcoinRawBlockDirect()" classname="org.zuinnote.hadoop.bitcoin.format.common.BitcoinFormatReaderTest" time="0.007">
<system-out><![CDATA[
unique-id: [engine:junit-jupiter]/[class:org.zuinnote.hadoop.bitcoin.format.common.BitcoinFormatReaderTest]/[method:parseVersion3BlockAsBitcoinRawBlockDirect()]
display-name: parseVersion3BlockAsBitcoinRawBlockDirect()
]]></system-out>
</testcase>
<testcase name="parseMultiNetAsBitcoinRawBlockDirect()" classname="org.zuinnote.hadoop.bitcoin.format.common.BitcoinFormatReaderTest" time="0.006">
<system-out><![CDATA[
unique-id: [engine:junit-jupiter]/[class:org.zuinnote.hadoop.bitcoin.format.common.BitcoinFormatReaderTest]/[method:parseMultiNetAsBitcoinRawBlockDirect()]
display-name: parseMultiNetAsBitcoinRawBlockDirect()
]]></system-out>
</testcase>
<testcase name="testPaymentAnyone()" classname="org.zuinnote.hadoop.bitcoin.format.common.BitcoinScriptPatternParserTest" time="0.001">
<system-out><![CDATA[
unique-id: [engine:junit-jupiter]/[class:org.zuinnote.hadoop.bitcoin.format.common.BitcoinScriptPatternParserTest]/[method:testPaymentAnyone()]
display-name: testPaymentAnyone()
]]></system-out>
</testcase>
<testcase name="testPaymentPubKeyGenesis()" classname="org.zuinnote.hadoop.bitcoin.format.common.BitcoinScriptPatternParserTest" time="0.003">
<system-out><![CDATA[
unique-id: [engine:junit-jupiter]/[class:org.zuinnote.hadoop.bitcoin.format.common.BitcoinScriptPatternParserTest]/[method:testPaymentPubKeyGenesis()]
display-name: testPaymentPubKeyGenesis()
]]></system-out>
</testcase>
<testcase name="testPaymentP2Hash()" classname="org.zuinnote.hadoop.bitcoin.format.common.BitcoinScriptPatternParserTest" time="0">
<system-out><![CDATA[
unique-id: [engine:junit-jupiter]/[class:org.zuinnote.hadoop.bitcoin.format.common.BitcoinScriptPatternParserTest]/[method:testPaymentP2Hash()]
display-name: testPaymentP2Hash()
]]></system-out>
</testcase>
<testcase name="testPaymentPuzzle()" classname="org.zuinnote.hadoop.bitcoin.format.common.BitcoinScriptPatternParserTest" time="0">
<system-out><![CDATA[
unique-id: [engine:junit-jupiter]/[class:org.zuinnote.hadoop.bitcoin.format.common.BitcoinScriptPatternParserTest]/[method:testPaymentPuzzle()]
display-name: testPaymentPuzzle()
]]></system-out>
</testcase>
<testcase name="testPaymentInvalid()" classname="org.zuinnote.hadoop.bitcoin.format.common.BitcoinScriptPatternParserTest" time="0.001">
<system-out><![CDATA[
unique-id: [engine:junit-jupiter]/[class:org.zuinnote.hadoop.bitcoin.format.common.BitcoinScriptPatternParserTest]/[method:testPaymentInvalid()]
display-name: testPaymentInvalid()
]]></system-out>
</testcase>
<testcase name="testPaymentSegwitPubKeySynthetic()" classname="org.zuinnote.hadoop.bitcoin.format.common.BitcoinScriptPatternParserTest" time="0">
<system-out><![CDATA[
unique-id: [engine:junit-jupiter]/[class:org.zuinnote.hadoop.bitcoin.format.common.BitcoinScriptPatternParserTest]/[method:testPaymentSegwitPubKeySynthetic()]
display-name: testPaymentSegwitPubKeySynthetic()
]]></system-out>
</testcase>
<testcase name="testPaymentSegwitP2WSHSynthetic()" classname="org.zuinnote.hadoop.bitcoin.format.common.BitcoinScriptPatternParserTest" time="0">
<system-out><![CDATA[
unique-id: [engine:junit-jupiter]/[class:org.zuinnote.hadoop.bitcoin.format.common.BitcoinScriptPatternParserTest]/[method:testPaymentSegwitP2WSHSynthetic()]
display-name: testPaymentSegwitP2WSHSynthetic()
]]></system-out>
</testcase>
<testcase name="testPaymentUnspendable()" classname="org.zuinnote.hadoop.bitcoin.format.common.BitcoinScriptPatternParserTest" time="0">
<system-out><![CDATA[
unique-id: [engine:junit-jupiter]/[class:org.zuinnote.hadoop.bitcoin.format.common.BitcoinScriptPatternParserTest]/[method:testPaymentUnspendable()]
display-name: testPaymentUnspendable()
]]></system-out>
</testcase>
<testcase name="testPaymentSegwitP2HashSynthetic()" classname="org.zuinnote.hadoop.bitcoin.format.common.BitcoinScriptPatternParserTest" time="0.001">
<system-out><![CDATA[
unique-id: [engine:junit-jupiter]/[class:org.zuinnote.hadoop.bitcoin.format.common.BitcoinScriptPatternParserTest]/[method:testPaymentSegwitP2HashSynthetic()]
display-name: testPaymentSegwitP2HashSynthetic()
]]></system-out>
</testcase>
<testcase name="testPaymentNull()" classname="org.zuinnote.hadoop.bitcoin.format.common.BitcoinScriptPatternParserTest" time="0">
<system-out><![CDATA[
unique-id: [engine:junit-jupiter]/[class:org.zuinnote.hadoop.bitcoin.format.common.BitcoinScriptPatternParserTest]/[method:testPaymentNull()]
display-name: testPaymentNull()
]]></system-out>
</testcase>
<testcase name="getVarIntSizeDWord()" classname="org.zuinnote.hadoop.bitcoin.format.common.BitcoinUtilTest" time="0">
<system-out><![CDATA[
unique-id: [engine:junit-jupiter]/[class:org.zuinnote.hadoop.bitcoin.format.common.BitcoinUtilTest]/[method:getVarIntSizeDWord()]
display-name: getVarIntSizeDWord()
]]></system-out>
</testcase>
<testcase name="getVarIntSizeQWord()" classname="org.zuinnote.hadoop.bitcoin.format.common.BitcoinUtilTest" time="0">
<system-out><![CDATA[
unique-id: [engine:junit-jupiter]/[class:org.zuinnote.hadoop.bitcoin.format.common.BitcoinUtilTest]/[method:getVarIntSizeQWord()]
display-name: getVarIntSizeQWord()
]]></system-out>
</testcase>
<testcase name="convertHexStringToByteArray()" classname="org.zuinnote.hadoop.bitcoin.format.common.BitcoinUtilTest" time="0">
<system-out><![CDATA[
unique-id: [engine:junit-jupiter]/[class:org.zuinnote.hadoop.bitcoin.format.common.BitcoinUtilTest]/[method:convertHexStringToByteArray()]
display-name: convertHexStringToByteArray()
]]></system-out>
</testcase>
<testcase name="getVarIntSizeByte()" classname="org.zuinnote.hadoop.bitcoin.format.common.BitcoinUtilTest" time="0">
<system-out><![CDATA[
unique-id: [engine:junit-jupiter]/[class:org.zuinnote.hadoop.bitcoin.format.common.BitcoinUtilTest]/[method:getVarIntSizeByte()]
display-name: getVarIntSizeByte()
]]></system-out>
</testcase>
<testcase name="getVarIntSizeWord()" classname="org.zuinnote.hadoop.bitcoin.format.common.BitcoinUtilTest" time="0">
<system-out><![CDATA[
unique-id: [engine:junit-jupiter]/[class:org.zuinnote.hadoop.bitcoin.format.common.BitcoinUtilTest]/[method:getVarIntSizeWord()]
display-name: getVarIntSizeWord()
]]></system-out>
</testcase>
<testcase name="convertIntToDate()" classname="org.zuinnote.hadoop.bitcoin.format.common.BitcoinUtilTest" time="0.023">
<system-out><![CDATA[
unique-id: [engine:junit-jupiter]/[class:org.zuinnote.hadoop.bitcoin.format.common.BitcoinUtilTest]/[method:convertIntToDate()]
display-name: convertIntToDate()
]]></system-out>
</testcase>
<testcase name="convertSignedIntToUnsigned()" classname="org.zuinnote.hadoop.bitcoin.format.common.BitcoinUtilTest" time="0.001">
<system-out><![CDATA[
unique-id: [engine:junit-jupiter]/[class:org.zuinnote.hadoop.bitcoin.format.common.BitcoinUtilTest]/[method:convertSignedIntToUnsigned()]
display-name: convertSignedIntToUnsigned()
]]></system-out>
</testcase>
<testcase name="reverseByteArray()" classname="org.zuinnote.hadoop.bitcoin.format.common.BitcoinUtilTest" time="0">
<system-out><![CDATA[
unique-id: [engine:junit-jupiter]/[class:org.zuinnote.hadoop.bitcoin.format.common.BitcoinUtilTest]/[method:reverseByteArray()]
display-name: reverseByteArray()
]]></system-out>
</testcase>
<testcase name="getVarIntByte()" classname="org.zuinnote.hadoop.bitcoin.format.common.BitcoinUtilTest" time="0">
<system-out><![CDATA[
unique-id: [engine:junit-jupiter]/[class:org.zuinnote.hadoop.bitcoin.format.common.BitcoinUtilTest]/[method:getVarIntByte()]
display-name: getVarIntByte()
]]></system-out>
</testcase>
<testcase name="getVarIntWord()" classname="org.zuinnote.hadoop.bitcoin.format.common.BitcoinUtilTest" time="0">
<system-out><![CDATA[
unique-id: [engine:junit-jupiter]/[class:org.zuinnote.hadoop.bitcoin.format.common.BitcoinUtilTest]/[method:getVarIntWord()]
display-name: getVarIntWord()
]]></system-out>
</testcase>
<testcase name="getTransactionHashSegWit()" classname="org.zuinnote.hadoop.bitcoin.format.common.BitcoinUtilTest" time="0.016">
<system-out><![CDATA[
unique-id: [engine:junit-jupiter]/[class:org.zuinnote.hadoop.bitcoin.format.common.BitcoinUtilTest]/[method:getTransactionHashSegWit()]
display-name: getTransactionHashSegWit()
]]></system-out>
</testcase>
<testcase name="getSize()" classname="org.zuinnote.hadoop.bitcoin.format.common.BitcoinUtilTest" time="0">
<system-out><![CDATA[
unique-id: [engine:junit-jupiter]/[class:org.zuinnote.hadoop.bitcoin.format.common.BitcoinUtilTest]/[method:getSize()]
display-name: getSize()
]]></system-out>
</testcase>
<testcase name="convertVarIntByteBufferToByteArray()" classname="org.zuinnote.hadoop.bitcoin.format.common.BitcoinUtilTest" time="0">
<system-out><![CDATA[
unique-id: [engine:junit-jupiter]/[class:org.zuinnote.hadoop.bitcoin.format.common.BitcoinUtilTest]/[method:convertVarIntByteBufferToByteArray()]
display-name: convertVarIntByteBufferToByteArray()
]]></system-out>
</testcase>
<testcase name="getTransactionHash()" classname="org.zuinnote.hadoop.bitcoin.format.common.BitcoinUtilTest" time="0">
<system-out><![CDATA[
unique-id: [engine:junit-jupiter]/[class:org.zuinnote.hadoop.bitcoin.format.common.BitcoinUtilTest]/[method:getTransactionHash()]
display-name: getTransactionHash()
]]></system-out>
</testcase>
<testcase name="getVarIntDWord()" classname="org.zuinnote.hadoop.bitcoin.format.common.BitcoinUtilTest" time="0">
<system-out><![CDATA[
unique-id: [engine:junit-jupiter]/[class:org.zuinnote.hadoop.bitcoin.format.common.BitcoinUtilTest]/[method:getVarIntDWord()]
display-name: getVarIntDWord()
]]></system-out>
</testcase>
<testcase name="getVarIntQWord()" classname="org.zuinnote.hadoop.bitcoin.format.common.BitcoinUtilTest" time="0">
<system-out><![CDATA[
unique-id: [engine:junit-jupiter]/[class:org.zuinnote.hadoop.bitcoin.format.common.BitcoinUtilTest]/[method:getVarIntQWord()]
display-name: getVarIntQWord()
]]></system-out>
</testcase>
<testcase name="compareMagicsNeg()" classname="org.zuinnote.hadoop.bitcoin.format.common.BitcoinUtilTest" time="0">
<system-out><![CDATA[
unique-id: [engine:junit-jupiter]/[class:org.zuinnote.hadoop.bitcoin.format.common.BitcoinUtilTest]/[method:compareMagicsNeg()]
display-name: compareMagicsNeg()
]]></system-out>
</testcase>
<testcase name="compareMagicsPos()" classname="org.zuinnote.hadoop.bitcoin.format.common.BitcoinUtilTest" time="0">
<system-out><![CDATA[
unique-id: [engine:junit-jupiter]/[class:org.zuinnote.hadoop.bitcoin.format.common.BitcoinUtilTest]/[method:compareMagicsPos()]
display-name: compareMagicsPos()
]]></system-out>
</testcase>
<testcase name="convertVarIntByteBufferToLong()" classname="org.zuinnote.hadoop.bitcoin.format.common.BitcoinUtilTest" time="0.001">
<system-out><![CDATA[
unique-id: [engine:junit-jupiter]/[class:org.zuinnote.hadoop.bitcoin.format.common.BitcoinUtilTest]/[method:convertVarIntByteBufferToLong()]
display-name: convertVarIntByteBufferToLong()
]]></system-out>
</testcase>
<testcase name="convertByteArrayToHexString()" classname="org.zuinnote.hadoop.bitcoin.format.common.BitcoinUtilTest" time="0.001">
<system-out><![CDATA[
unique-id: [engine:junit-jupiter]/[class:org.zuinnote.hadoop.bitcoin.format.common.BitcoinUtilTest]/[method:convertByteArrayToHexString()]
display-name: convertByteArrayToHexString()
]]></system-out>
</testcase>
<testcase name="convertIntToByteArray()" classname="org.zuinnote.hadoop.bitcoin.format.common.BitcoinUtilTest" time="0.002">
<system-out><![CDATA[
unique-id: [engine:junit-jupiter]/[class:org.zuinnote.hadoop.bitcoin.format.common.BitcoinUtilTest]/[method:convertIntToByteArray()]
display-name: convertIntToByteArray()
]]></system-out>
</testcase>
<testcase name="convertLongToByteArray()" classname="org.zuinnote.hadoop.bitcoin.format.common.BitcoinUtilTest" time="0.001">
<system-out><![CDATA[
unique-id: [engine:junit-jupiter]/[class:org.zuinnote.hadoop.bitcoin.format.common.BitcoinUtilTest]/[method:convertLongToByteArray()]
display-name: convertLongToByteArray()
]]></system-out>
</testcase>
<testcase name="checkTestDataVersion3BlockAvailable()" classname="org.zuinnote.hadoop.bitcoin.format.mapred.BitcoinFormatHadoopTest" time="0.001">
<system-out><![CDATA[
unique-id: [engine:junit-jupiter]/[class:org.zuinnote.hadoop.bitcoin.format.mapred.BitcoinFormatHadoopTest]/[method:checkTestDataVersion3BlockAvailable()]
display-name: checkTestDataVersion3BlockAvailable()
]]></system-out>
</testcase>
<testcase name="readBitcoinBlockInputFormatBlockVersion1()" classname="org.zuinnote.hadoop.bitcoin.format.mapred.BitcoinFormatHadoopTest" time="0.099">
<system-out><![CDATA[
unique-id: [engine:junit-jupiter]/[class:org.zuinnote.hadoop.bitcoin.format.mapred.BitcoinFormatHadoopTest]/[method:readBitcoinBlockInputFormatBlockVersion1()]
display-name: readBitcoinBlockInputFormatBlockVersion1()
]]></system-out>
</testcase>
<testcase name="readBitcoinBlockInputFormatBlockVersion2()" classname="org.zuinnote.hadoop.bitcoin.format.mapred.BitcoinFormatHadoopTest" time="0.012">
<system-out><![CDATA[
unique-id: [engine:junit-jupiter]/[class:org.zuinnote.hadoop.bitcoin.format.mapred.BitcoinFormatHadoopTest]/[method:readBitcoinBlockInputFormatBlockVersion2()]
display-name: readBitcoinBlockInputFormatBlockVersion2()
]]></system-out>
</testcase>
<testcase name="readBitcoinBlockInputFormatBlockVersion3()" classname="org.zuinnote.hadoop.bitcoin.format.mapred.BitcoinFormatHadoopTest" time="0.017">
<system-out><![CDATA[
unique-id: [engine:junit-jupiter]/[class:org.zuinnote.hadoop.bitcoin.format.mapred.BitcoinFormatHadoopTest]/[method:readBitcoinBlockInputFormatBlockVersion3()]
display-name: readBitcoinBlockInputFormatBlockVersion3()
]]></system-out>
</testcase>
<testcase name="readBitcoinBlockInputFormatBlockVersion4()" classname="org.zuinnote.hadoop.bitcoin.format.mapred.BitcoinFormatHadoopTest" time="0.009">
<system-out><![CDATA[
unique-id: [engine:junit-jupiter]/[class:org.zuinnote.hadoop.bitcoin.format.mapred.BitcoinFormatHadoopTest]/[method:readBitcoinBlockInputFormatBlockVersion4()]
display-name: readBitcoinBlockInputFormatBlockVersion4()
]]></system-out>
</testcase>
<testcase name="readBitcoinTransactionInputFormatBzip2Compressed()" classname="org.zuinnote.hadoop.bitcoin.format.mapred.BitcoinFormatHadoopTest" time="0.472">
<system-out><![CDATA[
unique-id: [engine:junit-jupiter]/[class:org.zuinnote.hadoop.bitcoin.format.mapred.BitcoinFormatHadoopTest]/[method:readBitcoinTransactionInputFormatBzip2Compressed()]
display-name: readBitcoinTransactionInputFormatBzip2Compressed()
]]></system-out>
</testcase>
<testcase name="readBitcoinBlockInputFormatMultiBlock()" classname="org.zuinnote.hadoop.bitcoin.format.mapred.BitcoinFormatHadoopTest" time="0.012">
<system-out><![CDATA[
unique-id: [engine:junit-jupiter]/[class:org.zuinnote.hadoop.bitcoin.format.mapred.BitcoinFormatHadoopTest]/[method:readBitcoinBlockInputFormatMultiBlock()]
display-name: readBitcoinBlockInputFormatMultiBlock()
]]></system-out>
</testcase>
<testcase name="readBitcoinRawBlockInputFormatReqSeekBlockVersion1()" classname="org.zuinnote.hadoop.bitcoin.format.mapred.BitcoinFormatHadoopTest" time="0.009">
<system-out><![CDATA[
unique-id: [engine:junit-jupiter]/[class:org.zuinnote.hadoop.bitcoin.format.mapred.BitcoinFormatHadoopTest]/[method:readBitcoinRawBlockInputFormatReqSeekBlockVersion1()]
display-name: readBitcoinRawBlockInputFormatReqSeekBlockVersion1()
]]></system-out>
</testcase>
<testcase name="readBitcoinRawBlockInputFormatBzip2Compressed()" classname="org.zuinnote.hadoop.bitcoin.format.mapred.BitcoinFormatHadoopTest" time="0.147">
<system-out><![CDATA[
unique-id: [engine:junit-jupiter]/[class:org.zuinnote.hadoop.bitcoin.format.mapred.BitcoinFormatHadoopTest]/[method:readBitcoinRawBlockInputFormatBzip2Compressed()]
display-name: readBitcoinRawBlockInputFormatBzip2Compressed()
]]></system-out>
</testcase>
<testcase name="readBitcoinBlockInputFormatGzipCompressed()" classname="org.zuinnote.hadoop.bitcoin.format.mapred.BitcoinFormatHadoopTest" time="0.042">
<system-out><![CDATA[
unique-id: [engine:junit-jupiter]/[class:org.zuinnote.hadoop.bitcoin.format.mapred.BitcoinFormatHadoopTest]/[method:readBitcoinBlockInputFormatGzipCompressed()]
display-name: readBitcoinBlockInputFormatGzipCompressed()
]]></system-out>
</testcase>
<testcase name="readBitcoinBlockInputFormatGenesisBlock()" classname="org.zuinnote.hadoop.bitcoin.format.mapred.BitcoinFormatHadoopTest" time="0.005">
<system-out><![CDATA[
unique-id: [engine:junit-jupiter]/[class:org.zuinnote.hadoop.bitcoin.format.mapred.BitcoinFormatHadoopTest]/[method:readBitcoinBlockInputFormatGenesisBlock()]
display-name: readBitcoinBlockInputFormatGenesisBlock()
]]></system-out>
</testcase>
<testcase name="checkTestDataVersion1BlockAvailable()" classname="org.zuinnote.hadoop.bitcoin.format.mapred.BitcoinFormatHadoopTest" time="0">
<system-out><![CDATA[
unique-id: [engine:junit-jupiter]/[class:org.zuinnote.hadoop.bitcoin.format.mapred.BitcoinFormatHadoopTest]/[method:checkTestDataVersion1BlockAvailable()]
display-name: checkTestDataVersion1BlockAvailable()
]]></system-out>
</testcase>
<testcase name="readBitcoinBlockInputFormatReqSeekBlockVersion1()" classname="org.zuinnote.hadoop.bitcoin.format.mapred.BitcoinFormatHadoopTest" time="0.005">
<system-out><![CDATA[
unique-id: [engine:junit-jupiter]/[class:org.zuinnote.hadoop.bitcoin.format.mapred.BitcoinFormatHadoopTest]/[method:readBitcoinBlockInputFormatReqSeekBlockVersion1()]
display-name: readBitcoinBlockInputFormatReqSeekBlockVersion1()
]]></system-out>
</testcase>
<testcase name="readBitcoinTransactionInputFormatGenesisBlock()" classname="org.zuinnote.hadoop.bitcoin.format.mapred.BitcoinFormatHadoopTest" time="0.005">
<system-out><![CDATA[
unique-id: [engine:junit-jupiter]/[class:org.zuinnote.hadoop.bitcoin.format.mapred.BitcoinFormatHadoopTest]/[method:readBitcoinTransactionInputFormatGenesisBlock()]
display-name: readBitcoinTransactionInputFormatGenesisBlock()
]]></system-out>
</testcase>
<testcase name="checkTestDataVersion4BlockAvailable()" classname="org.zuinnote.hadoop.bitcoin.format.mapred.BitcoinFormatHadoopTest" time="0.001">
<system-out><![CDATA[
unique-id: [engine:junit-jupiter]/[class:org.zuinnote.hadoop.bitcoin.format.mapred.BitcoinFormatHadoopTest]/[method:checkTestDataVersion4BlockAvailable()]
display-name: checkTestDataVersion4BlockAvailable()
]]></system-out>
</testcase>
<testcase name="readBitcoinTransactionInputFormatMultiBlock()" classname="org.zuinnote.hadoop.bitcoin.format.mapred.BitcoinFormatHadoopTest" time="0.022">
<system-out><![CDATA[
unique-id: [engine:junit-jupiter]/[class:org.zuinnote.hadoop.bitcoin.format.mapred.BitcoinFormatHadoopTest]/[method:readBitcoinTransactionInputFormatMultiBlock()]
display-name: readBitcoinTransactionInputFormatMultiBlock()
]]></system-out>
</testcase>
<testcase name="checkTestDataVersion4GzipCompressedBlockAvailable()" classname="org.zuinnote.hadoop.bitcoin.format.mapred.BitcoinFormatHadoopTest" time="0.001">
<system-out><![CDATA[
unique-id: [engine:junit-jupiter]/[class:org.zuinnote.hadoop.bitcoin.format.mapred.BitcoinFormatHadoopTest]/[method:checkTestDataVersion4GzipCompressedBlockAvailable()]
display-name: checkTestDataVersion4GzipCompressedBlockAvailable()
]]></system-out>
</testcase>
<testcase name="readBitcoinRawBlockInputFormatBlockVersion1()" classname="org.zuinnote.hadoop.bitcoin.format.mapred.BitcoinFormatHadoopTest" time="0.005">
<system-out><![CDATA[
unique-id: [engine:junit-jupiter]/[class:org.zuinnote.hadoop.bitcoin.format.mapred.BitcoinFormatHadoopTest]/[method:readBitcoinRawBlockInputFormatBlockVersion1()]
display-name: readBitcoinRawBlockInputFormatBlockVersion1()
]]></system-out>
</testcase>
<testcase name="readBitcoinRawBlockInputFormatBlockVersion2()" classname="org.zuinnote.hadoop.bitcoin.format.mapred.BitcoinFormatHadoopTest" time="0.008">
<system-out><![CDATA[
unique-id: [engine:junit-jupiter]/[class:org.zuinnote.hadoop.bitcoin.format.mapred.BitcoinFormatHadoopTest]/[method:readBitcoinRawBlockInputFormatBlockVersion2()]
display-name: readBitcoinRawBlockInputFormatBlockVersion2()
]]></system-out>
</testcase>
<testcase name="readBitcoinRawBlockInputFormatBlockVersion3()" classname="org.zuinnote.hadoop.bitcoin.format.mapred.BitcoinFormatHadoopTest" time="0.005">
<system-out><![CDATA[
unique-id: [engine:junit-jupiter]/[class:org.zuinnote.hadoop.bitcoin.format.mapred.BitcoinFormatHadoopTest]/[method:readBitcoinRawBlockInputFormatBlockVersion3()]
display-name: readBitcoinRawBlockInputFormatBlockVersion3()
]]></system-out>
</testcase>
<testcase name="readBitcoinRawBlockInputFormatBlockVersion4()" classname="org.zuinnote.hadoop.bitcoin.format.mapred.BitcoinFormatHadoopTest" time="0.005">
<system-out><![CDATA[
unique-id: [engine:junit-jupiter]/[class:org.zuinnote.hadoop.bitcoin.format.mapred.BitcoinFormatHadoopTest]/[method:readBitcoinRawBlockInputFormatBlockVersion4()]
display-name: readBitcoinRawBlockInputFormatBlockVersion4()
]]></system-out>
</testcase>
<testcase name="readBitcoinRawBlockInputFormatMultiBlock()" classname="org.zuinnote.hadoop.bitcoin.format.mapred.BitcoinFormatHadoopTest" time="0.008">
<system-out><![CDATA[
unique-id: [engine:junit-jupiter]/[class:org.zuinnote.hadoop.bitcoin.format.mapred.BitcoinFormatHadoopTest]/[method:readBitcoinRawBlockInputFormatMultiBlock()]
display-name: readBitcoinRawBlockInputFormatMultiBlock()
]]></system-out>
</testcase>
<testcase name="readBitcoinBlockInputFormatBzip2Compressed()" classname="org.zuinnote.hadoop.bitcoin.format.mapred.BitcoinFormatHadoopTest" time="0.147">
<system-out><![CDATA[
unique-id: [engine:junit-jupiter]/[class:org.zuinnote.hadoop.bitcoin.format.mapred.BitcoinFormatHadoopTest]/[method:readBitcoinBlockInputFormatBzip2Compressed()]
display-name: readBitcoinBlockInputFormatBzip2Compressed()
]]></system-out>
</testcase>
<testcase name="checkTestDataVersion1SeekBlockAvailable()" classname="org.zuinnote.hadoop.bitcoin.format.mapred.BitcoinFormatHadoopTest" time="0.001">
<system-out><![CDATA[
unique-id: [engine:junit-jupiter]/[class:org.zuinnote.hadoop.bitcoin.format.mapred.BitcoinFormatHadoopTest]/[method:checkTestDataVersion1SeekBlockAvailable()]
display-name: checkTestDataVersion1SeekBlockAvailable()
]]></system-out>
</testcase>
<testcase name="readBitcoinTransactionInputFormatGzipCompressed()" classname="org.zuinnote.hadoop.bitcoin.format.mapred.BitcoinFormatHadoopTest" time="0.101">
<system-out><![CDATA[
unique-id: [engine:junit-jupiter]/[class:org.zuinnote.hadoop.bitcoin.format.mapred.BitcoinFormatHadoopTest]/[method:readBitcoinTransactionInputFormatGzipCompressed()]
display-name: readBitcoinTransactionInputFormatGzipCompressed()
]]></system-out>
</testcase>
<testcase name="checkTestDataVersion2BlockAvailable()" classname="org.zuinnote.hadoop.bitcoin.format.mapred.BitcoinFormatHadoopTest" time="0">
<system-out><![CDATA[
unique-id: [engine:junit-jupiter]/[class:org.zuinnote.hadoop.bitcoin.format.mapred.BitcoinFormatHadoopTest]/[method:checkTestDataVersion2BlockAvailable()]
display-name: checkTestDataVersion2BlockAvailable()
]]></system-out>
</testcase>
<testcase name="readBitcoinRawBlockInputFormatGzipCompressed()" classname="org.zuinnote.hadoop.bitcoin.format.mapred.BitcoinFormatHadoopTest" time="0.011">
<system-out><![CDATA[
unique-id: [engine:junit-jupiter]/[class:org.zuinnote.hadoop.bitcoin.format.mapred.BitcoinFormatHadoopTest]/[method:readBitcoinRawBlockInputFormatGzipCompressed()]
display-name: readBitcoinRawBlockInputFormatGzipCompressed()
]]></system-out>
</testcase>
<testcase name="checkTestDataMultiBlockAvailable()" classname="org.zuinnote.hadoop.bitcoin.format.mapred.BitcoinFormatHadoopTest" time="0">
<system-out><![CDATA[
unique-id: [engine:junit-jupiter]/[class:org.zuinnote.hadoop.bitcoin.format.mapred.BitcoinFormatHadoopTest]/[method:checkTestDataMultiBlockAvailable()]
display-name: checkTestDataMultiBlockAvailable()
]]></system-out>
</testcase>
<testcase name="checkTestDataGenesisBlockAvailable()" classname="org.zuinnote.hadoop.bitcoin.format.mapred.BitcoinFormatHadoopTest" time="0">
<system-out><![CDATA[
unique-id: [engine:junit-jupiter]/[class:org.zuinnote.hadoop.bitcoin.format.mapred.BitcoinFormatHadoopTest]/[method:checkTestDataGenesisBlockAvailable()]
display-name: checkTestDataGenesisBlockAvailable()
]]></system-out>
</testcase>
<testcase name="readBitcoinRawBlockInputFormatGenesisBlock()" classname="org.zuinnote.hadoop.bitcoin.format.mapred.BitcoinFormatHadoopTest" time="0.002">
<system-out><![CDATA[
unique-id: [engine:junit-jupiter]/[class:org.zuinnote.hadoop.bitcoin.format.mapred.BitcoinFormatHadoopTest]/[method:readBitcoinRawBlockInputFormatGenesisBlock()]
display-name: readBitcoinRawBlockInputFormatGenesisBlock()
]]></system-out>
</testcase>
<testcase name="readBitcoinTransactionInputFormatBlockVersion1ReqSeek()" classname="org.zuinnote.hadoop.bitcoin.format.mapred.BitcoinFormatHadoopTest" time="0.002">
<system-out><![CDATA[
unique-id: [engine:junit-jupiter]/[class:org.zuinnote.hadoop.bitcoin.format.mapred.BitcoinFormatHadoopTest]/[method:readBitcoinTransactionInputFormatBlockVersion1ReqSeek()]
display-name: readBitcoinTransactionInputFormatBlockVersion1ReqSeek()
]]></system-out>
</testcase>
<testcase name="checkTestDataVersion4Bzip2CompressedBlockAvailable()" classname="org.zuinnote.hadoop.bitcoin.format.mapred.BitcoinFormatHadoopTest" time="0">
<system-out><![CDATA[
unique-id: [engine:junit-jupiter]/[class:org.zuinnote.hadoop.bitcoin.format.mapred.BitcoinFormatHadoopTest]/[method:checkTestDataVersion4Bzip2CompressedBlockAvailable()]
display-name: checkTestDataVersion4Bzip2CompressedBlockAvailable()
]]></system-out>
</testcase>
<testcase name="readBitcoinTransactionInputFormatBlockVersion1()" classname="org.zuinnote.hadoop.bitcoin.format.mapred.BitcoinFormatHadoopTest" time="0.003">
<system-out><![CDATA[
unique-id: [engine:junit-jupiter]/[class:org.zuinnote.hadoop.bitcoin.format.mapred.BitcoinFormatHadoopTest]/[method:readBitcoinTransactionInputFormatBlockVersion1()]
display-name: readBitcoinTransactionInputFormatBlockVersion1()
]]></system-out>
</testcase>
<testcase name="readBitcoinTransactionInputFormatBlockVersion2()" classname="org.zuinnote.hadoop.bitcoin.format.mapred.BitcoinFormatHadoopTest" time="0.023">
<system-out><![CDATA[
unique-id: [engine:junit-jupiter]/[class:org.zuinnote.hadoop.bitcoin.format.mapred.BitcoinFormatHadoopTest]/[method:readBitcoinTransactionInputFormatBlockVersion2()]
display-name: readBitcoinTransactionInputFormatBlockVersion2()
]]></system-out>
</testcase>
<testcase name="readBitcoinTransactionInputFormatBlockVersion3()" classname="org.zuinnote.hadoop.bitcoin.format.mapred.BitcoinFormatHadoopTest" time="0.034">
<system-out><![CDATA[
unique-id: [engine:junit-jupiter]/[class:org.zuinnote.hadoop.bitcoin.format.mapred.BitcoinFormatHadoopTest]/[method:readBitcoinTransactionInputFormatBlockVersion3()]
display-name: readBitcoinTransactionInputFormatBlockVersion3()
]]></system-out>
</testcase>
<testcase name="readBitcoinTransactionInputFormatBlockVersion4()" classname="org.zuinnote.hadoop.bitcoin.format.mapred.BitcoinFormatHadoopTest" time="0.037">
<system-out><![CDATA[
unique-id: [engine:junit-jupiter]/[class:org.zuinnote.hadoop.bitcoin.format.mapred.BitcoinFormatHadoopTest]/[method:readBitcoinTransactionInputFormatBlockVersion4()]
display-name: readBitcoinTransactionInputFormatBlockVersion4()
]]></system-out>
</testcase>
<testcase name="checkTestDataVersion3BlockAvailable()" classname="org.zuinnote.hadoop.bitcoin.format.mapreduce.BitcoinFormatHadoopTest" time="0.001">
<system-out><![CDATA[
unique-id: [engine:junit-jupiter]/[class:org.zuinnote.hadoop.bitcoin.format.mapreduce.BitcoinFormatHadoopTest]/[method:checkTestDataVersion3BlockAvailable()]
display-name: checkTestDataVersion3BlockAvailable()
]]></system-out>
</testcase>
<testcase name="readBitcoinBlockInputFormatBlockVersion1()" classname="org.zuinnote.hadoop.bitcoin.format.mapreduce.BitcoinFormatHadoopTest" time="0.033">
<system-out><![CDATA[
unique-id: [engine:junit-jupiter]/[class:org.zuinnote.hadoop.bitcoin.format.mapreduce.BitcoinFormatHadoopTest]/[method:readBitcoinBlockInputFormatBlockVersion1()]
display-name: readBitcoinBlockInputFormatBlockVersion1()
]]></system-out>
</testcase>
<testcase name="readBitcoinBlockInputFormatBlockVersion2()" classname="org.zuinnote.hadoop.bitcoin.format.mapreduce.BitcoinFormatHadoopTest" time="0.005">
<system-out><![CDATA[
unique-id: [engine:junit-jupiter]/[class:org.zuinnote.hadoop.bitcoin.format.mapreduce.BitcoinFormatHadoopTest]/[method:readBitcoinBlockInputFormatBlockVersion2()]
display-name: readBitcoinBlockInputFormatBlockVersion2()
]]></system-out>
</testcase>
<testcase name="readBitcoinBlockInputFormatBlockVersion3()" classname="org.zuinnote.hadoop.bitcoin.format.mapreduce.BitcoinFormatHadoopTest" time="0.008">
<system-out><![CDATA[
unique-id: [engine:junit-jupiter]/[class:org.zuinnote.hadoop.bitcoin.format.mapreduce.BitcoinFormatHadoopTest]/[method:readBitcoinBlockInputFormatBlockVersion3()]
display-name: readBitcoinBlockInputFormatBlockVersion3()
]]></system-out>
</testcase>
<testcase name="readBitcoinBlockInputFormatBlockVersion4()" classname="org.zuinnote.hadoop.bitcoin.format.mapreduce.BitcoinFormatHadoopTest" time="0.008">
<system-out><![CDATA[
unique-id: [engine:junit-jupiter]/[class:org.zuinnote.hadoop.bitcoin.format.mapreduce.BitcoinFormatHadoopTest]/[method:readBitcoinBlockInputFormatBlockVersion4()]
display-name: readBitcoinBlockInputFormatBlockVersion4()
]]></system-out>
</testcase>
<testcase name="readBitcoinTransactionInputFormatBzip2Compressed()" classname="org.zuinnote.hadoop.bitcoin.format.mapreduce.BitcoinFormatHadoopTest" time="0.159">
<system-out><![CDATA[
unique-id: [engine:junit-jupiter]/[class:org.zuinnote.hadoop.bitcoin.format.mapreduce.BitcoinFormatHadoopTest]/[method:readBitcoinTransactionInputFormatBzip2Compressed()]
display-name: readBitcoinTransactionInputFormatBzip2Compressed()
]]></system-out>
</testcase>
<testcase name="readBitcoinBlockInputFormatMultiBlock()" classname="org.zuinnote.hadoop.bitcoin.format.mapreduce.BitcoinFormatHadoopTest" time="0.004">
<system-out><![CDATA[
unique-id: [engine:junit-jupiter]/[class:org.zuinnote.hadoop.bitcoin.format.mapreduce.BitcoinFormatHadoopTest]/[method:readBitcoinBlockInputFormatMultiBlock()]
display-name: readBitcoinBlockInputFormatMultiBlock()
]]></system-out>
</testcase>
<testcase name="readBitcoinRawBlockInputFormatReqSeekBlockVersion1()" classname="org.zuinnote.hadoop.bitcoin.format.mapreduce.BitcoinFormatHadoopTest" time="0.005">
<system-out><![CDATA[
unique-id: [engine:junit-jupiter]/[class:org.zuinnote.hadoop.bitcoin.format.mapreduce.BitcoinFormatHadoopTest]/[method:readBitcoinRawBlockInputFormatReqSeekBlockVersion1()]
display-name: readBitcoinRawBlockInputFormatReqSeekBlockVersion1()
]]></system-out>
</testcase>
<testcase name="readBitcoinRawBlockInputFormatBzip2Compressed()" classname="org.zuinnote.hadoop.bitcoin.format.mapreduce.BitcoinFormatHadoopTest" time="0.122">
<system-out><![CDATA[
unique-id: [engine:junit-jupiter]/[class:org.zuinnote.hadoop.bitcoin.format.mapreduce.BitcoinFormatHadoopTest]/[method:readBitcoinRawBlockInputFormatBzip2Compressed()]
display-name: readBitcoinRawBlockInputFormatBzip2Compressed()
]]></system-out>
</testcase>
<testcase name="readBitcoinBlockInputFormatGzipCompressed()" classname="org.zuinnote.hadoop.bitcoin.format.mapreduce.BitcoinFormatHadoopTest" time="0.016">
<system-out><![CDATA[
unique-id: [engine:junit-jupiter]/[class:org.zuinnote.hadoop.bitcoin.format.mapreduce.BitcoinFormatHadoopTest]/[method:readBitcoinBlockInputFormatGzipCompressed()]
display-name: readBitcoinBlockInputFormatGzipCompressed()
]]></system-out>
</testcase>
<testcase name="readBitcoinBlockInputFormatGenesisBlock()" classname="org.zuinnote.hadoop.bitcoin.format.mapreduce.BitcoinFormatHadoopTest" time="0.003">
<system-out><![CDATA[
unique-id: [engine:junit-jupiter]/[class:org.zuinnote.hadoop.bitcoin.format.mapreduce.BitcoinFormatHadoopTest]/[method:readBitcoinBlockInputFormatGenesisBlock()]
display-name: readBitcoinBlockInputFormatGenesisBlock()
]]></system-out>
</testcase>
<testcase name="checkTestDataVersion1BlockAvailable()" classname="org.zuinnote.hadoop.bitcoin.format.mapreduce.BitcoinFormatHadoopTest" time="0.001">
<system-out><![CDATA[
unique-id: [engine:junit-jupiter]/[class:org.zuinnote.hadoop.bitcoin.format.mapreduce.BitcoinFormatHadoopTest]/[method:checkTestDataVersion1BlockAvailable()]
display-name: checkTestDataVersion1BlockAvailable()
]]></system-out>
</testcase>
<testcase name="readBitcoinBlockInputFormatReqSeekBlockVersion1()" classname="org.zuinnote.hadoop.bitcoin.format.mapreduce.BitcoinFormatHadoopTest" time="0.002">
<system-out><![CDATA[
unique-id: [engine:junit-jupiter]/[class:org.zuinnote.hadoop.bitcoin.format.mapreduce.BitcoinFormatHadoopTest]/[method:readBitcoinBlockInputFormatReqSeekBlockVersion1()]
display-name: readBitcoinBlockInputFormatReqSeekBlockVersion1()
]]></system-out>
</testcase>
<testcase name="readBitcoinTransactionInputFormatGenesisBlock()" classname="org.zuinnote.hadoop.bitcoin.format.mapreduce.BitcoinFormatHadoopTest" time="0.003">
<system-out><![CDATA[
unique-id: [engine:junit-jupiter]/[class:org.zuinnote.hadoop.bitcoin.format.mapreduce.BitcoinFormatHadoopTest]/[method:readBitcoinTransactionInputFormatGenesisBlock()]
display-name: readBitcoinTransactionInputFormatGenesisBlock()
]]></system-out>
</testcase>
<testcase name="checkTestDataVersion4BlockAvailable()" classname="org.zuinnote.hadoop.bitcoin.format.mapreduce.BitcoinFormatHadoopTest" time="0">
<system-out><![CDATA[
unique-id: [engine:junit-jupiter]/[class:org.zuinnote.hadoop.bitcoin.format.mapreduce.BitcoinFormatHadoopTest]/[method:checkTestDataVersion4BlockAvailable()]
display-name: checkTestDataVersion4BlockAvailable()
]]></system-out>
</testcase>
<testcase name="readBitcoinTransactionInputFormatMultiBlock()" classname="org.zuinnote.hadoop.bitcoin.format.mapreduce.BitcoinFormatHadoopTest" time="0.016">
<system-out><![CDATA[
unique-id: [engine:junit-jupiter]/[class:org.zuinnote.hadoop.bitcoin.format.mapreduce.BitcoinFormatHadoopTest]/[method:readBitcoinTransactionInputFormatMultiBlock()]
display-name: readBitcoinTransactionInputFormatMultiBlock()
]]></system-out>
</testcase>
<testcase name="checkTestDataVersion4GzipCompressedBlockAvailable()" classname="org.zuinnote.hadoop.bitcoin.format.mapreduce.BitcoinFormatHadoopTest" time="0">
<system-out><![CDATA[
unique-id: [engine:junit-jupiter]/[class:org.zuinnote.hadoop.bitcoin.format.mapreduce.BitcoinFormatHadoopTest]/[method:checkTestDataVersion4GzipCompressedBlockAvailable()]
display-name: checkTestDataVersion4GzipCompressedBlockAvailable()
]]></system-out>
</testcase>
<testcase name="readBitcoinRawBlockInputFormatBlockVersion1()" classname="org.zuinnote.hadoop.bitcoin.format.mapreduce.BitcoinFormatHadoopTest" time="0.006">
<system-out><![CDATA[
unique-id: [engine:junit-jupiter]/[class:org.zuinnote.hadoop.bitcoin.format.mapreduce.BitcoinFormatHadoopTest]/[method:readBitcoinRawBlockInputFormatBlockVersion1()]
display-name: readBitcoinRawBlockInputFormatBlockVersion1()
]]></system-out>
</testcase>
<testcase name="readBitcoinRawBlockInputFormatBlockVersion2()" classname="org.zuinnote.hadoop.bitcoin.format.mapreduce.BitcoinFormatHadoopTest" time="0.004">
<system-out><![CDATA[
unique-id: [engine:junit-jupiter]/[class:org.zuinnote.hadoop.bitcoin.format.mapreduce.BitcoinFormatHadoopTest]/[method:readBitcoinRawBlockInputFormatBlockVersion2()]
display-name: readBitcoinRawBlockInputFormatBlockVersion2()
]]></system-out>
</testcase>
<testcase name="readBitcoinRawBlockInputFormatBlockVersion3()" classname="org.zuinnote.hadoop.bitcoin.format.mapreduce.BitcoinFormatHadoopTest" time="0.006">
<system-out><![CDATA[
unique-id: [engine:junit-jupiter]/[class:org.zuinnote.hadoop.bitcoin.format.mapreduce.BitcoinFormatHadoopTest]/[method:readBitcoinRawBlockInputFormatBlockVersion3()]
display-name: readBitcoinRawBlockInputFormatBlockVersion3()
]]></system-out>
</testcase>
<testcase name="readBitcoinRawBlockInputFormatBlockVersion4()" classname="org.zuinnote.hadoop.bitcoin.format.mapreduce.BitcoinFormatHadoopTest" time="0.005">
<system-out><![CDATA[
unique-id: [engine:junit-jupiter]/[class:org.zuinnote.hadoop.bitcoin.format.mapreduce.BitcoinFormatHadoopTest]/[method:readBitcoinRawBlockInputFormatBlockVersion4()]
display-name: readBitcoinRawBlockInputFormatBlockVersion4()
]]></system-out>
</testcase>
<testcase name="readBitcoinRawBlockInputFormatMultiBlock()" classname="org.zuinnote.hadoop.bitcoin.format.mapreduce.BitcoinFormatHadoopTest" time="0.003">
<system-out><![CDATA[
unique-id: [engine:junit-jupiter]/[class:org.zuinnote.hadoop.bitcoin.format.mapreduce.BitcoinFormatHadoopTest]/[method:readBitcoinRawBlockInputFormatMultiBlock()]
display-name: readBitcoinRawBlockInputFormatMultiBlock()
]]></system-out>
</testcase>
<testcase name="readBitcoinBlockInputFormatBzip2Compressed()" classname="org.zuinnote.hadoop.bitcoin.format.mapreduce.BitcoinFormatHadoopTest" time="0.136">
<system-out><![CDATA[
unique-id: [engine:junit-jupiter]/[class:org.zuinnote.hadoop.bitcoin.format.mapreduce.BitcoinFormatHadoopTest]/[method:readBitcoinBlockInputFormatBzip2Compressed()]
display-name: readBitcoinBlockInputFormatBzip2Compressed()
]]></system-out>
</testcase>
<testcase name="checkTestDataVersion1SeekBlockAvailable()" classname="org.zuinnote.hadoop.bitcoin.format.mapreduce.BitcoinFormatHadoopTest" time="0">
<system-out><![CDATA[
unique-id: [engine:junit-jupiter]/[class:org.zuinnote.hadoop.bitcoin.format.mapreduce.BitcoinFormatHadoopTest]/[method:checkTestDataVersion1SeekBlockAvailable()]
display-name: checkTestDataVersion1SeekBlockAvailable()
]]></system-out>
</testcase>
<testcase name="readBitcoinTransactionInputFormatGzipCompressed()" classname="org.zuinnote.hadoop.bitcoin.format.mapreduce.BitcoinFormatHadoopTest" time="0.029">
<system-out><![CDATA[
unique-id: [engine:junit-jupiter]/[class:org.zuinnote.hadoop.bitcoin.format.mapreduce.BitcoinFormatHadoopTest]/[method:readBitcoinTransactionInputFormatGzipCompressed()]
display-name: readBitcoinTransactionInputFormatGzipCompressed()
]]></system-out>
</testcase>
<testcase name="checkTestDataVersion2BlockAvailable()" classname="org.zuinnote.hadoop.bitcoin.format.mapreduce.BitcoinFormatHadoopTest" time="0.001">
<system-out><![CDATA[
unique-id: [engine:junit-jupiter]/[class:org.zuinnote.hadoop.bitcoin.format.mapreduce.BitcoinFormatHadoopTest]/[method:checkTestDataVersion2BlockAvailable()]
display-name: checkTestDataVersion2BlockAvailable()
]]></system-out>
</testcase>
<testcase name="readBitcoinRawBlockInputFormatGzipCompressed()" classname="org.zuinnote.hadoop.bitcoin.format.mapreduce.BitcoinFormatHadoopTest" time="0.01">
<system-out><![CDATA[
unique-id: [engine:junit-jupiter]/[class:org.zuinnote.hadoop.bitcoin.format.mapreduce.BitcoinFormatHadoopTest]/[method:readBitcoinRawBlockInputFormatGzipCompressed()]
display-name: readBitcoinRawBlockInputFormatGzipCompressed()
]]></system-out>
</testcase>
<testcase name="checkTestDataMultiBlockAvailable()" classname="org.zuinnote.hadoop.bitcoin.format.mapreduce.BitcoinFormatHadoopTest" time="0">
<system-out><![CDATA[
unique-id: [engine:junit-jupiter]/[class:org.zuinnote.hadoop.bitcoin.format.mapreduce.BitcoinFormatHadoopTest]/[method:checkTestDataMultiBlockAvailable()]
display-name: checkTestDataMultiBlockAvailable()
]]></system-out>
</testcase>
<testcase name="checkTestDataGenesisBlockAvailable()" classname="org.zuinnote.hadoop.bitcoin.format.mapreduce.BitcoinFormatHadoopTest" time="0.001">
<system-out><![CDATA[
unique-id: [engine:junit-jupiter]/[class:org.zuinnote.hadoop.bitcoin.format.mapreduce.BitcoinFormatHadoopTest]/[method:checkTestDataGenesisBlockAvailable()]
display-name: checkTestDataGenesisBlockAvailable()
]]></system-out>
</testcase>
<testcase name="readBitcoinRawBlockInputFormatGenesisBlock()" classname="org.zuinnote.hadoop.bitcoin.format.mapreduce.BitcoinFormatHadoopTest" time="0.004">
<system-out><![CDATA[
unique-id: [engine:junit-jupiter]/[class:org.zuinnote.hadoop.bitcoin.format.mapreduce.BitcoinFormatHadoopTest]/[method:readBitcoinRawBlockInputFormatGenesisBlock()]
display-name: readBitcoinRawBlockInputFormatGenesisBlock()
]]></system-out>
</testcase>
<testcase name="readBitcoinTransactionInputFormatBlockVersion1ReqSeek()" classname="org.zuinnote.hadoop.bitcoin.format.mapreduce.BitcoinFormatHadoopTest" time="0.004">
<system-out><![CDATA[
unique-id: [engine:junit-jupiter]/[class:org.zuinnote.hadoop.bitcoin.format.mapreduce.BitcoinFormatHadoopTest]/[method:readBitcoinTransactionInputFormatBlockVersion1ReqSeek()]
display-name: readBitcoinTransactionInputFormatBlockVersion1ReqSeek()
]]></system-out>
</testcase>
<testcase name="checkTestDataVersion4Bzip2CompressedBlockAvailable()" classname="org.zuinnote.hadoop.bitcoin.format.mapreduce.BitcoinFormatHadoopTest" time="0">
<system-out><![CDATA[
unique-id: [engine:junit-jupiter]/[class:org.zuinnote.hadoop.bitcoin.format.mapreduce.BitcoinFormatHadoopTest]/[method:checkTestDataVersion4Bzip2CompressedBlockAvailable()]
display-name: checkTestDataVersion4Bzip2CompressedBlockAvailable()
]]></system-out>
</testcase>
<testcase name="readBitcoinTransactionInputFormatBlockVersion1()" classname="org.zuinnote.hadoop.bitcoin.format.mapreduce.BitcoinFormatHadoopTest" time="0.003">
<system-out><![CDATA[
unique-id: [engine:junit-jupiter]/[class:org.zuinnote.hadoop.bitcoin.format.mapreduce.BitcoinFormatHadoopTest]/[method:readBitcoinTransactionInputFormatBlockVersion1()]
display-name: readBitcoinTransactionInputFormatBlockVersion1()
]]></system-out>
</testcase>
<testcase name="readBitcoinTransactionInputFormatBlockVersion2()" classname="org.zuinnote.hadoop.bitcoin.format.mapreduce.BitcoinFormatHadoopTest" time="0.011">
<system-out><![CDATA[
unique-id: [engine:junit-jupiter]/[class:org.zuinnote.hadoop.bitcoin.format.mapreduce.BitcoinFormatHadoopTest]/[method:readBitcoinTransactionInputFormatBlockVersion2()]
display-name: readBitcoinTransactionInputFormatBlockVersion2()
]]></system-out>
</testcase>
<testcase name="readBitcoinTransactionInputFormatBlockVersion3()" classname="org.zuinnote.hadoop.bitcoin.format.mapreduce.BitcoinFormatHadoopTest" time="0.056">
<system-out><![CDATA[
unique-id: [engine:junit-jupiter]/[class:org.zuinnote.hadoop.bitcoin.format.mapreduce.BitcoinFormatHadoopTest]/[method:readBitcoinTransactionInputFormatBlockVersion3()]
display-name: readBitcoinTransactionInputFormatBlockVersion3()
]]></system-out>
</testcase>
<testcase name="readBitcoinTransactionInputFormatBlockVersion4()" classname="org.zuinnote.hadoop.bitcoin.format.mapreduce.BitcoinFormatHadoopTest" time="0.027">
<system-out><![CDATA[
unique-id: [engine:junit-jupiter]/[class:org.zuinnote.hadoop.bitcoin.format.mapreduce.BitcoinFormatHadoopTest]/[method:readBitcoinTransactionInputFormatBlockVersion4()]
display-name: readBitcoinTransactionInputFormatBlockVersion4()
]]></system-out>
</testcase>
<testcase name="parseBlock0to10AsEthereumRawBlockDirect()" classname="org.zuinnote.hadoop.ethereum.format.common.EthereumFormatReaderTest" time="0.011">
<system-out><![CDATA[
unique-id: [engine:junit-jupiter]/[class:org.zuinnote.hadoop.ethereum.format.common.EthereumFormatReaderTest]/[method:parseBlock0to10AsEthereumRawBlockDirect()]
display-name: parseBlock0to10AsEthereumRawBlockDirect()
]]></system-out>
</testcase>
<testcase name="parseBlock3346406AsEthereumRawBlockHeap()" classname="org.zuinnote.hadoop.ethereum.format.common.EthereumFormatReaderTest" time="0">
<system-out><![CDATA[
unique-id: [engine:junit-jupiter]/[class:org.zuinnote.hadoop.ethereum.format.common.EthereumFormatReaderTest]/[method:parseBlock3346406AsEthereumRawBlockHeap()]
display-name: parseBlock3346406AsEthereumRawBlockHeap()
]]></system-out>
</testcase>
<testcase name="parseBlock3510000to3510010AsEthereumBlockHeap()" classname="org.zuinnote.hadoop.ethereum.format.common.EthereumFormatReaderTest" time="0.016">
<system-out><![CDATA[
unique-id: [engine:junit-jupiter]/[class:org.zuinnote.hadoop.ethereum.format.common.EthereumFormatReaderTest]/[method:parseBlock3510000to3510010AsEthereumBlockHeap()]
display-name: parseBlock3510000to3510010AsEthereumBlockHeap()
]]></system-out>
</testcase>
<testcase name="checkTestDataBlock1346406Available()" classname="org.zuinnote.hadoop.ethereum.format.common.EthereumFormatReaderTest" time="0">
<system-out><![CDATA[
unique-id: [engine:junit-jupiter]/[class:org.zuinnote.hadoop.ethereum.format.common.EthereumFormatReaderTest]/[method:checkTestDataBlock1346406Available()]
display-name: checkTestDataBlock1346406Available()
]]></system-out>
</testcase>
<testcase name="issue46ParseBlock4800251AsEthereumBlockHeap()" classname="org.zuinnote.hadoop.ethereum.format.common.EthereumFormatReaderTest" time="0.003">
<system-out><![CDATA[
unique-id: [engine:junit-jupiter]/[class:org.zuinnote.hadoop.ethereum.format.common.EthereumFormatReaderTest]/[method:issue46ParseBlock4800251AsEthereumBlockHeap()]
display-name: issue46ParseBlock4800251AsEthereumBlockHeap()
]]></system-out>
</testcase>
<testcase name="issue47ParseBlock4800251AsEthereumBlockHeap()" classname="org.zuinnote.hadoop.ethereum.format.common.EthereumFormatReaderTest" time="0.263">
<system-out><![CDATA[
unique-id: [engine:junit-jupiter]/[class:org.zuinnote.hadoop.ethereum.format.common.EthereumFormatReaderTest]/[method:issue47ParseBlock4800251AsEthereumBlockHeap()]
display-name: issue47ParseBlock4800251AsEthereumBlockHeap()
]]></system-out>
</testcase>
<testcase name="parseBlockOneAsEthereumRawBlockHeap()" classname="org.zuinnote.hadoop.ethereum.format.common.EthereumFormatReaderTest" time="0.001">
<system-out><![CDATA[
unique-id: [engine:junit-jupiter]/[class:org.zuinnote.hadoop.ethereum.format.common.EthereumFormatReaderTest]/[method:parseBlockOneAsEthereumRawBlockHeap()]
display-name: parseBlockOneAsEthereumRawBlockHeap()
]]></system-out>
</testcase>
<testcase name="checkTestDataBlock1Available()" classname="org.zuinnote.hadoop.ethereum.format.common.EthereumFormatReaderTest" time="0">
<system-out><![CDATA[
unique-id: [engine:junit-jupiter]/[class:org.zuinnote.hadoop.ethereum.format.common.EthereumFormatReaderTest]/[method:checkTestDataBlock1Available()]
display-name: checkTestDataBlock1Available()
]]></system-out>
</testcase>
<testcase name="issue48ParseBlock4800251AsEthereumBlockHeap()" classname="org.zuinnote.hadoop.ethereum.format.common.EthereumFormatReaderTest" time="0.131">
<system-out><![CDATA[
unique-id: [engine:junit-jupiter]/[class:org.zuinnote.hadoop.ethereum.format.common.EthereumFormatReaderTest]/[method:issue48ParseBlock4800251AsEthereumBlockHeap()]
display-name: issue48ParseBlock4800251AsEthereumBlockHeap()
]]></system-out>
</testcase>
<testcase name="parseBlock0to10AsEthereumBlockHeap()" classname="org.zuinnote.hadoop.ethereum.format.common.EthereumFormatReaderTest" time="0">
<system-out><![CDATA[
unique-id: [engine:junit-jupiter]/[class:org.zuinnote.hadoop.ethereum.format.common.EthereumFormatReaderTest]/[method:parseBlock0to10AsEthereumBlockHeap()]
display-name: parseBlock0to10AsEthereumBlockHeap()
]]></system-out>
</testcase>
<testcase name="parseGenesisBlockAsEthereumBlockDirect()" classname="org.zuinnote.hadoop.ethereum.format.common.EthereumFormatReaderTest" time="0.001">
<system-out><![CDATA[
unique-id: [engine:junit-jupiter]/[class:org.zuinnote.hadoop.ethereum.format.common.EthereumFormatReaderTest]/[method:parseGenesisBlockAsEthereumBlockDirect()]
display-name: parseGenesisBlockAsEthereumBlockDirect()
]]></system-out>
</testcase>
<testcase name="parseBlockOneAsEthereumBlockDirect()" classname="org.zuinnote.hadoop.ethereum.format.common.EthereumFormatReaderTest" time="0.007">
<system-out><![CDATA[
unique-id: [engine:junit-jupiter]/[class:org.zuinnote.hadoop.ethereum.format.common.EthereumFormatReaderTest]/[method:parseBlockOneAsEthereumBlockDirect()]
display-name: parseBlockOneAsEthereumBlockDirect()
]]></system-out>
</testcase>
<testcase name="parseBlock35100to351010AsEthereumRawBlockHeap()" classname="org.zuinnote.hadoop.ethereum.format.common.EthereumFormatReaderTest" time="0">
<system-out><![CDATA[
unique-id: [engine:junit-jupiter]/[class:org.zuinnote.hadoop.ethereum.format.common.EthereumFormatReaderTest]/[method:parseBlock35100to351010AsEthereumRawBlockHeap()]
display-name: parseBlock35100to351010AsEthereumRawBlockHeap()
]]></system-out>
</testcase>
<testcase name="checkTestDataBlock4800251Available()" classname="org.zuinnote.hadoop.ethereum.format.common.EthereumFormatReaderTest" time="0.001">
<system-out><![CDATA[
unique-id: [engine:junit-jupiter]/[class:org.zuinnote.hadoop.ethereum.format.common.EthereumFormatReaderTest]/[method:checkTestDataBlock4800251Available()]
display-name: checkTestDataBlock4800251Available()
]]></system-out>
</testcase>
<testcase name="checkTestDataBlock351000to3510010Available()" classname="org.zuinnote.hadoop.ethereum.format.common.EthereumFormatReaderTest" time="0">
<system-out><![CDATA[
unique-id: [engine:junit-jupiter]/[class:org.zuinnote.hadoop.ethereum.format.common.EthereumFormatReaderTest]/[method:checkTestDataBlock351000to3510010Available()]
display-name: checkTestDataBlock351000to3510010Available()
]]></system-out>
</testcase>
<testcase name="parseBlockOneAsEthereumRawBlockDirect()" classname="org.zuinnote.hadoop.ethereum.format.common.EthereumFormatReaderTest" time="0">
<system-out><![CDATA[
unique-id: [engine:junit-jupiter]/[class:org.zuinnote.hadoop.ethereum.format.common.EthereumFormatReaderTest]/[method:parseBlockOneAsEthereumRawBlockDirect()]
display-name: parseBlockOneAsEthereumRawBlockDirect()
]]></system-out>
</testcase>
<testcase name="parseBlockOneAsEthereumBlockHeap()" classname="org.zuinnote.hadoop.ethereum.format.common.EthereumFormatReaderTest" time="0.002">
<system-out><![CDATA[
unique-id: [engine:junit-jupiter]/[class:org.zuinnote.hadoop.ethereum.format.common.EthereumFormatReaderTest]/[method:parseBlockOneAsEthereumBlockHeap()]
display-name: parseBlockOneAsEthereumBlockHeap()
]]></system-out>
</testcase>
<testcase name="parseBlock1346406AsEthereumBlockHeap()" classname="org.zuinnote.hadoop.ethereum.format.common.EthereumFormatReaderTest" time="0.001">
<system-out><![CDATA[
unique-id: [engine:junit-jupiter]/[class:org.zuinnote.hadoop.ethereum.format.common.EthereumFormatReaderTest]/[method:parseBlock1346406AsEthereumBlockHeap()]
display-name: parseBlock1346406AsEthereumBlockHeap()
]]></system-out>
</testcase>
<testcase name="parseBlock3346406AsEthereumBlockHeap()" classname="org.zuinnote.hadoop.ethereum.format.common.EthereumFormatReaderTest" time="0.001">
<system-out><![CDATA[
unique-id: [engine:junit-jupiter]/[class:org.zuinnote.hadoop.ethereum.format.common.EthereumFormatReaderTest]/[method:parseBlock3346406AsEthereumBlockHeap()]
display-name: parseBlock3346406AsEthereumBlockHeap()
]]></system-out>
</testcase>
<testcase name="parseBlock35100to351010AsEthereumRawBlockDirect()" classname="org.zuinnote.hadoop.ethereum.format.common.EthereumFormatReaderTest" time="0.001">
<system-out><![CDATA[
unique-id: [engine:junit-jupiter]/[class:org.zuinnote.hadoop.ethereum.format.common.EthereumFormatReaderTest]/[method:parseBlock35100to351010AsEthereumRawBlockDirect()]
display-name: parseBlock35100to351010AsEthereumRawBlockDirect()
]]></system-out>
</testcase>
<testcase name="parseBlock3346406AsEthereumBlockDirect()" classname="org.zuinnote.hadoop.ethereum.format.common.EthereumFormatReaderTest" time="0">
<system-out><![CDATA[
unique-id: [engine:junit-jupiter]/[class:org.zuinnote.hadoop.ethereum.format.common.EthereumFormatReaderTest]/[method:parseBlock3346406AsEthereumBlockDirect()]
display-name: parseBlock3346406AsEthereumBlockDirect()
]]></system-out>
</testcase>
<testcase name="parseBlock1346406AsEthereumRawBlockDirect()" classname="org.zuinnote.hadoop.ethereum.format.common.EthereumFormatReaderTest" time="0">
<system-out><![CDATA[
unique-id: [engine:junit-jupiter]/[class:org.zuinnote.hadoop.ethereum.format.common.EthereumFormatReaderTest]/[method:parseBlock1346406AsEthereumRawBlockDirect()]
display-name: parseBlock1346406AsEthereumRawBlockDirect()
]]></system-out>
</testcase>
<testcase name="parseBlock1346406AsEthereumRawBlockHeap()" classname="org.zuinnote.hadoop.ethereum.format.common.EthereumFormatReaderTest" time="0">
<system-out><![CDATA[
unique-id: [engine:junit-jupiter]/[class:org.zuinnote.hadoop.ethereum.format.common.EthereumFormatReaderTest]/[method:parseBlock1346406AsEthereumRawBlockHeap()]
display-name: parseBlock1346406AsEthereumRawBlockHeap()
]]></system-out>
</testcase>
<testcase name="parseBlock1346406AsEthereumBlockDirect()" classname="org.zuinnote.hadoop.ethereum.format.common.EthereumFormatReaderTest" time="0">
<system-out><![CDATA[
unique-id: [engine:junit-jupiter]/[class:org.zuinnote.hadoop.ethereum.format.common.EthereumFormatReaderTest]/[method:parseBlock1346406AsEthereumBlockDirect()]
display-name: parseBlock1346406AsEthereumBlockDirect()
]]></system-out>
</testcase>
<testcase name="checkTestDataGenesisBlockAvailable()" classname="org.zuinnote.hadoop.ethereum.format.common.EthereumFormatReaderTest" time="0">
<system-out><![CDATA[
unique-id: [engine:junit-jupiter]/[class:org.zuinnote.hadoop.ethereum.format.common.EthereumFormatReaderTest]/[method:checkTestDataGenesisBlockAvailable()]
display-name: checkTestDataGenesisBlockAvailable()
]]></system-out>
</testcase>
<testcase name="parseBlock0to10AsEthereumBlockDirect()" classname="org.zuinnote.hadoop.ethereum.format.common.EthereumFormatReaderTest" time="0.002">
<system-out><![CDATA[
unique-id: [engine:junit-jupiter]/[class:org.zuinnote.hadoop.ethereum.format.common.EthereumFormatReaderTest]/[method:parseBlock0to10AsEthereumBlockDirect()]
display-name: parseBlock0to10AsEthereumBlockDirect()
]]></system-out>
</testcase>
<testcase name="parseBlock3346406AsEthereumRawBlockDirect()" classname="org.zuinnote.hadoop.ethereum.format.common.EthereumFormatReaderTest" time="0.001">
<system-out><![CDATA[
unique-id: [engine:junit-jupiter]/[class:org.zuinnote.hadoop.ethereum.format.common.EthereumFormatReaderTest]/[method:parseBlock3346406AsEthereumRawBlockDirect()]
display-name: parseBlock3346406AsEthereumRawBlockDirect()
]]></system-out>
</testcase>
<testcase name="parseBlock0to10AsEthereumRawBlockHeap()" classname="org.zuinnote.hadoop.ethereum.format.common.EthereumFormatReaderTest" time="0">
<system-out><![CDATA[
unique-id: [engine:junit-jupiter]/[class:org.zuinnote.hadoop.ethereum.format.common.EthereumFormatReaderTest]/[method:parseBlock0to10AsEthereumRawBlockHeap()]
display-name: parseBlock0to10AsEthereumRawBlockHeap()
]]></system-out>
</testcase>
<testcase name="parseGenesisBlockAsEthereumBlockHeap()" classname="org.zuinnote.hadoop.ethereum.format.common.EthereumFormatReaderTest" time="0.001">
<system-out><![CDATA[
unique-id: [engine:junit-jupiter]/[class:org.zuinnote.hadoop.ethereum.format.common.EthereumFormatReaderTest]/[method:parseGenesisBlockAsEthereumBlockHeap()]
display-name: parseGenesisBlockAsEthereumBlockHeap()
]]></system-out>
</testcase>
<testcase name="parseGenesisBlockAsEthereumRawBlockDirect()" classname="org.zuinnote.hadoop.ethereum.format.common.EthereumFormatReaderTest" time="0.001">
<system-out><![CDATA[
unique-id: [engine:junit-jupiter]/[class:org.zuinnote.hadoop.ethereum.format.common.EthereumFormatReaderTest]/[method:parseGenesisBlockAsEthereumRawBlockDirect()]
display-name: parseGenesisBlockAsEthereumRawBlockDirect()
]]></system-out>
</testcase>
<testcase name="checkTestDataBlock0to10Available()" classname="org.zuinnote.hadoop.ethereum.format.common.EthereumFormatReaderTest" time="0">
<system-out><![CDATA[
unique-id: [engine:junit-jupiter]/[class:org.zuinnote.hadoop.ethereum.format.common.EthereumFormatReaderTest]/[method:checkTestDataBlock0to10Available()]
display-name: checkTestDataBlock0to10Available()
]]></system-out>
</testcase>
<testcase name="parseGenesisBlockAsEthereumRawBlockHeap()" classname="org.zuinnote.hadoop.ethereum.format.common.EthereumFormatReaderTest" time="0.001">
<system-out><![CDATA[
unique-id: [engine:junit-jupiter]/[class:org.zuinnote.hadoop.ethereum.format.common.EthereumFormatReaderTest]/[method:parseGenesisBlockAsEthereumRawBlockHeap()]
display-name: parseGenesisBlockAsEthereumRawBlockHeap()
]]></system-out>
</testcase>
<testcase name="checkTestDataBlock3346406Available()" classname="org.zuinnote.hadoop.ethereum.format.common.EthereumFormatReaderTest" time="0">
<system-out><![CDATA[
unique-id: [engine:junit-jupiter]/[class:org.zuinnote.hadoop.ethereum.format.common.EthereumFormatReaderTest]/[method:checkTestDataBlock3346406Available()]
display-name: checkTestDataBlock3346406Available()
]]></system-out>
</testcase>
<testcase name="parseBlock3510000to3510010AsEthereumBlockDirect()" classname="org.zuinnote.hadoop.ethereum.format.common.EthereumFormatReaderTest" time="0.003">
<system-out><![CDATA[
unique-id: [engine:junit-jupiter]/[class:org.zuinnote.hadoop.ethereum.format.common.EthereumFormatReaderTest]/[method:parseBlock3510000to3510010AsEthereumBlockDirect()]
display-name: parseBlock3510000to3510010AsEthereumBlockDirect()
]]></system-out>
</testcase>
<testcase name="checkTestDataBlock1346406Available()" classname="org.zuinnote.hadoop.ethereum.format.common.EthereumUtilTest" time="0">
<system-out><![CDATA[
unique-id: [engine:junit-jupiter]/[class:org.zuinnote.hadoop.ethereum.format.common.EthereumUtilTest]/[method:checkTestDataBlock1346406Available()]
display-name: checkTestDataBlock1346406Available()
]]></system-out>
</testcase>
<testcase name="decodeRLPElementInt15()" classname="org.zuinnote.hadoop.ethereum.format.common.EthereumUtilTest" time="0">
<system-out><![CDATA[
unique-id: [engine:junit-jupiter]/[class:org.zuinnote.hadoop.ethereum.format.common.EthereumUtilTest]/[method:decodeRLPElementInt15()]
display-name: decodeRLPElementInt15()
]]></system-out>
</testcase>
<testcase name="decodeRLPListString()" classname="org.zuinnote.hadoop.ethereum.format.common.EthereumUtilTest" time="0">
<system-out><![CDATA[
unique-id: [engine:junit-jupiter]/[class:org.zuinnote.hadoop.ethereum.format.common.EthereumUtilTest]/[method:decodeRLPListString()]
display-name: decodeRLPListString()
]]></system-out>
</testcase>
<testcase name="decodeRLPElementLargeString()" classname="org.zuinnote.hadoop.ethereum.format.common.EthereumUtilTest" time="0">
<system-out><![CDATA[
unique-id: [engine:junit-jupiter]/[class:org.zuinnote.hadoop.ethereum.format.common.EthereumUtilTest]/[method:decodeRLPElementLargeString()]
display-name: decodeRLPElementLargeString()
]]></system-out>
</testcase>
<testcase name="getTransActionHashBlock1346406()" classname="org.zuinnote.hadoop.ethereum.format.common.EthereumUtilTest" time="0.003">
<system-out><![CDATA[
unique-id: [engine:junit-jupiter]/[class:org.zuinnote.hadoop.ethereum.format.common.EthereumUtilTest]/[method:getTransActionHashBlock1346406()]
display-name: getTransActionHashBlock1346406()
]]></system-out>
</testcase>
<testcase name="decodeRLPElementInt1024()" classname="org.zuinnote.hadoop.ethereum.format.common.EthereumUtilTest" time="0">
<system-out><![CDATA[
unique-id: [engine:junit-jupiter]/[class:org.zuinnote.hadoop.ethereum.format.common.EthereumUtilTest]/[method:decodeRLPElementInt1024()]
display-name: decodeRLPElementInt1024()
]]></system-out>
</testcase>
<testcase name="encodeRLPElementLargeByteArray2()" classname="org.zuinnote.hadoop.ethereum.format.common.EthereumUtilTest" time="0.001">
<system-out><![CDATA[
unique-id: [engine:junit-jupiter]/[class:org.zuinnote.hadoop.ethereum.format.common.EthereumUtilTest]/[method:encodeRLPElementLargeByteArray2()]
display-name: encodeRLPElementLargeByteArray2()
]]></system-out>
</testcase>
<testcase name="calculateChainIdBlock1346406()" classname="org.zuinnote.hadoop.ethereum.format.common.EthereumUtilTest" time="0">
<system-out><![CDATA[
unique-id: [engine:junit-jupiter]/[class:org.zuinnote.hadoop.ethereum.format.common.EthereumUtilTest]/[method:calculateChainIdBlock1346406()]
display-name: calculateChainIdBlock1346406()
]]></system-out>
</testcase>
<testcase name="encodeRLPElementLargeByteArray()" classname="org.zuinnote.hadoop.ethereum.format.common.EthereumUtilTest" time="0">
<system-out><![CDATA[
unique-id: [engine:junit-jupiter]/[class:org.zuinnote.hadoop.ethereum.format.common.EthereumUtilTest]/[method:encodeRLPElementLargeByteArray()]
display-name: encodeRLPElementLargeByteArray()
]]></system-out>
</testcase>
<testcase name="decodeRLPListSet3()" classname="org.zuinnote.hadoop.ethereum.format.common.EthereumUtilTest" time="0">
<system-out><![CDATA[
unique-id: [engine:junit-jupiter]/[class:org.zuinnote.hadoop.ethereum.format.common.EthereumUtilTest]/[method:decodeRLPListSet3()]
display-name: decodeRLPListSet3()
]]></system-out>
</testcase>
<testcase name="decodeRLPEmptyList()" classname="org.zuinnote.hadoop.ethereum.format.common.EthereumUtilTest" time="0">
<system-out><![CDATA[
unique-id: [engine:junit-jupiter]/[class:org.zuinnote.hadoop.ethereum.format.common.EthereumUtilTest]/[method:decodeRLPEmptyList()]
display-name: decodeRLPEmptyList()
]]></system-out>
</testcase>
<testcase name="getTransActionSendAddressBlock1346406()" classname="org.zuinnote.hadoop.ethereum.format.common.EthereumUtilTest" time="0.059">
<system-out><![CDATA[
unique-id: [engine:junit-jupiter]/[class:org.zuinnote.hadoop.ethereum.format.common.EthereumUtilTest]/[method:getTransActionSendAddressBlock1346406()]
display-name: getTransActionSendAddressBlock1346406()
]]></system-out>
</testcase>
<testcase name="decodeRLPElementString()" classname="org.zuinnote.hadoop.ethereum.format.common.EthereumUtilTest" time="0">
<system-out><![CDATA[
unique-id: [engine:junit-jupiter]/[class:org.zuinnote.hadoop.ethereum.format.common.EthereumUtilTest]/[method:decodeRLPElementString()]
display-name: decodeRLPElementString()
]]></system-out>
</testcase>
<testcase name="decodeRLPEmptyString()" classname="org.zuinnote.hadoop.ethereum.format.common.EthereumUtilTest" time="0">
<system-out><![CDATA[
unique-id: [engine:junit-jupiter]/[class:org.zuinnote.hadoop.ethereum.format.common.EthereumUtilTest]/[method:decodeRLPEmptyString()]
display-name: decodeRLPEmptyString()
]]></system-out>
</testcase>
<testcase name="checkTestDataBlock1346406Available()" classname="org.zuinnote.hadoop.ethereum.format.mapred.EthereumFormatHadoopTest" time="0">
<system-out><![CDATA[
unique-id: [engine:junit-jupiter]/[class:org.zuinnote.hadoop.ethereum.format.mapred.EthereumFormatHadoopTest]/[method:checkTestDataBlock1346406Available()]
display-name: checkTestDataBlock1346406Available()
]]></system-out>
</testcase>
<testcase name="checkTestDataBlock403419()" classname="org.zuinnote.hadoop.ethereum.format.mapred.EthereumFormatHadoopTest" time="0">
<system-out><![CDATA[
unique-id: [engine:junit-jupiter]/[class:org.zuinnote.hadoop.ethereum.format.mapred.EthereumFormatHadoopTest]/[method:checkTestDataBlock403419()]
display-name: checkTestDataBlock403419()
]]></system-out>
</testcase>
<testcase name="checkTestDataBlock447533()" classname="org.zuinnote.hadoop.ethereum.format.mapred.EthereumFormatHadoopTest" time="0">
<system-out><![CDATA[
unique-id: [engine:junit-jupiter]/[class:org.zuinnote.hadoop.ethereum.format.mapred.EthereumFormatHadoopTest]/[method:checkTestDataBlock447533()]
display-name: checkTestDataBlock447533()
]]></system-out>
</testcase>
<testcase name="readEthereumBlockInputFormatBlock1()" classname="org.zuinnote.hadoop.ethereum.format.mapred.EthereumFormatHadoopTest" time="0.005">
<system-out><![CDATA[
unique-id: [engine:junit-jupiter]/[class:org.zuinnote.hadoop.ethereum.format.mapred.EthereumFormatHadoopTest]/[method:readEthereumBlockInputFormatBlock1()]
display-name: readEthereumBlockInputFormatBlock1()
]]></system-out>
</testcase>
<testcase name="readEthereumBlockInputFormatBlock403419()" classname="org.zuinnote.hadoop.ethereum.format.mapred.EthereumFormatHadoopTest" time="0.003">
<system-out><![CDATA[
unique-id: [engine:junit-jupiter]/[class:org.zuinnote.hadoop.ethereum.format.mapred.EthereumFormatHadoopTest]/[method:readEthereumBlockInputFormatBlock403419()]
display-name: readEthereumBlockInputFormatBlock403419()
]]></system-out>
</testcase>
<testcase name="readEthereumBlockInputFormatBlock447533()" classname="org.zuinnote.hadoop.ethereum.format.mapred.EthereumFormatHadoopTest" time="0.004">
<system-out><![CDATA[
unique-id: [engine:junit-jupiter]/[class:org.zuinnote.hadoop.ethereum.format.mapred.EthereumFormatHadoopTest]/[method:readEthereumBlockInputFormatBlock447533()]
display-name: readEthereumBlockInputFormatBlock447533()
]]></system-out>
</testcase>
<testcase name="checkTestDataBlock1Available()" classname="org.zuinnote.hadoop.ethereum.format.mapred.EthereumFormatHadoopTest" time="0">
<system-out><![CDATA[
unique-id: [engine:junit-jupiter]/[class:org.zuinnote.hadoop.ethereum.format.mapred.EthereumFormatHadoopTest]/[method:checkTestDataBlock1Available()]
display-name: checkTestDataBlock1Available()
]]></system-out>
</testcase>
<testcase name="readEthereumBlockInputFormatBlock1346406()" classname="org.zuinnote.hadoop.ethereum.format.mapred.EthereumFormatHadoopTest" time="0.004">
<system-out><![CDATA[
unique-id: [engine:junit-jupiter]/[class:org.zuinnote.hadoop.ethereum.format.mapred.EthereumFormatHadoopTest]/[method:readEthereumBlockInputFormatBlock1346406()]
display-name: readEthereumBlockInputFormatBlock1346406()
]]></system-out>
</testcase>
<testcase name="checkTestDataBlock351000to3510010Available()" classname="org.zuinnote.hadoop.ethereum.format.mapred.EthereumFormatHadoopTest" time="0">
<system-out><![CDATA[
unique-id: [engine:junit-jupiter]/[class:org.zuinnote.hadoop.ethereum.format.mapred.EthereumFormatHadoopTest]/[method:checkTestDataBlock351000to3510010Available()]
display-name: checkTestDataBlock351000to3510010Available()
]]></system-out>
</testcase>
<testcase name="readEthereumBlockInputFormatBlock1346406Bzip2Compressed()" classname="org.zuinnote.hadoop.ethereum.format.mapred.EthereumFormatHadoopTest" time="0.007">
<system-out><![CDATA[
unique-id: [engine:junit-jupiter]/[class:org.zuinnote.hadoop.ethereum.format.mapred.EthereumFormatHadoopTest]/[method:readEthereumBlockInputFormatBlock1346406Bzip2Compressed()]
display-name: readEthereumBlockInputFormatBlock1346406Bzip2Compressed()
]]></system-out>
</testcase>
<testcase name="readEthereumBlockInputFormatBlock0to10()" classname="org.zuinnote.hadoop.ethereum.format.mapred.EthereumFormatHadoopTest" time="0.003">
<system-out><![CDATA[
unique-id: [engine:junit-jupiter]/[class:org.zuinnote.hadoop.ethereum.format.mapred.EthereumFormatHadoopTest]/[method:readEthereumBlockInputFormatBlock0to10()]
display-name: readEthereumBlockInputFormatBlock0to10()
]]></system-out>
</testcase>
<testcase name="checkTestDataGenesisBlockAvailable()" classname="org.zuinnote.hadoop.ethereum.format.mapred.EthereumFormatHadoopTest" time="0.001">
<system-out><![CDATA[
unique-id: [engine:junit-jupiter]/[class:org.zuinnote.hadoop.ethereum.format.mapred.EthereumFormatHadoopTest]/[method:checkTestDataGenesisBlockAvailable()]
display-name: checkTestDataGenesisBlockAvailable()
]]></system-out>
</testcase>
<testcase name="readEthereumBlockInputFormatBlock3510000to3510010()" classname="org.zuinnote.hadoop.ethereum.format.mapred.EthereumFormatHadoopTest" time="0.002">
<system-out><![CDATA[
unique-id: [engine:junit-jupiter]/[class:org.zuinnote.hadoop.ethereum.format.mapred.EthereumFormatHadoopTest]/[method:readEthereumBlockInputFormatBlock3510000to3510010()]
display-name: readEthereumBlockInputFormatBlock3510000to3510010()
]]></system-out>
</testcase>
<testcase name="readEthereumBlockInputFormatBlock1346406GzipCompressed()" classname="org.zuinnote.hadoop.ethereum.format.mapred.EthereumFormatHadoopTest" time="0.002">
<system-out><![CDATA[
unique-id: [engine:junit-jupiter]/[class:org.zuinnote.hadoop.ethereum.format.mapred.EthereumFormatHadoopTest]/[method:readEthereumBlockInputFormatBlock1346406GzipCompressed()]
display-name: readEthereumBlockInputFormatBlock1346406GzipCompressed()
]]></system-out>
</testcase>
<testcase name="readEthereumBlockInputFormatBlock3346406()" classname="org.zuinnote.hadoop.ethereum.format.mapred.EthereumFormatHadoopTest" time="0.005">
<system-out><![CDATA[
unique-id: [engine:junit-jupiter]/[class:org.zuinnote.hadoop.ethereum.format.mapred.EthereumFormatHadoopTest]/[method:readEthereumBlockInputFormatBlock3346406()]
display-name: readEthereumBlockInputFormatBlock3346406()
]]></system-out>
</testcase>
<testcase name="checkTestDataBlock1346406AGzipCompressedvailable()" classname="org.zuinnote.hadoop.ethereum.format.mapred.EthereumFormatHadoopTest" time="0.001">
<system-out><![CDATA[
unique-id: [engine:junit-jupiter]/[class:org.zuinnote.hadoop.ethereum.format.mapred.EthereumFormatHadoopTest]/[method:checkTestDataBlock1346406AGzipCompressedvailable()]
display-name: checkTestDataBlock1346406AGzipCompressedvailable()
]]></system-out>
</testcase>
<testcase name="checkTestDataBlock0to10Available()" classname="org.zuinnote.hadoop.ethereum.format.mapred.EthereumFormatHadoopTest" time="0.001">
<system-out><![CDATA[
unique-id: [engine:junit-jupiter]/[class:org.zuinnote.hadoop.ethereum.format.mapred.EthereumFormatHadoopTest]/[method:checkTestDataBlock0to10Available()]
display-name: checkTestDataBlock0to10Available()
]]></system-out>
</testcase>
<testcase name="checkTestDataBlock3346406Available()" classname="org.zuinnote.hadoop.ethereum.format.mapred.EthereumFormatHadoopTest" time="0.001">
<system-out><![CDATA[
unique-id: [engine:junit-jupiter]/[class:org.zuinnote.hadoop.ethereum.format.mapred.EthereumFormatHadoopTest]/[method:checkTestDataBlock3346406Available()]
display-name: checkTestDataBlock3346406Available()
]]></system-out>
</testcase>
<testcase name="readEthereumBlockInputFormatGenesisBlock()" classname="org.zuinnote.hadoop.ethereum.format.mapred.EthereumFormatHadoopTest" time="0.003">
<system-out><![CDATA[
unique-id: [engine:junit-jupiter]/[class:org.zuinnote.hadoop.ethereum.format.mapred.EthereumFormatHadoopTest]/[method:readEthereumBlockInputFormatGenesisBlock()]
display-name: readEthereumBlockInputFormatGenesisBlock()
]]></system-out>
</testcase>
<testcase name="checkTestDataBlock1346406Bzip2CompressedAvailable()" classname="org.zuinnote.hadoop.ethereum.format.mapred.EthereumFormatHadoopTest" time="0">
<system-out><![CDATA[
unique-id: [engine:junit-jupiter]/[class:org.zuinnote.hadoop.ethereum.format.mapred.EthereumFormatHadoopTest]/[method:checkTestDataBlock1346406Bzip2CompressedAvailable()]
display-name: checkTestDataBlock1346406Bzip2CompressedAvailable()
]]></system-out>
</testcase>
<testcase name="checkTestDataBlock1346406Available()" classname="org.zuinnote.hadoop.ethereum.format.mapreduce.EthereumFormatHadoopTest" time="0">
<system-out><![CDATA[
unique-id: [engine:junit-jupiter]/[class:org.zuinnote.hadoop.ethereum.format.mapreduce.EthereumFormatHadoopTest]/[method:checkTestDataBlock1346406Available()]
display-name: checkTestDataBlock1346406Available()
]]></system-out>
</testcase>
<testcase name="checkTestDataBlock403419()" classname="org.zuinnote.hadoop.ethereum.format.mapreduce.EthereumFormatHadoopTest" time="0">
<system-out><![CDATA[
unique-id: [engine:junit-jupiter]/[class:org.zuinnote.hadoop.ethereum.format.mapreduce.EthereumFormatHadoopTest]/[method:checkTestDataBlock403419()]
display-name: checkTestDataBlock403419()
]]></system-out>
</testcase>
<testcase name="checkTestDataBlock447533()" classname="org.zuinnote.hadoop.ethereum.format.mapreduce.EthereumFormatHadoopTest" time="0">
<system-out><![CDATA[
unique-id: [engine:junit-jupiter]/[class:org.zuinnote.hadoop.ethereum.format.mapreduce.EthereumFormatHadoopTest]/[method:checkTestDataBlock447533()]
display-name: checkTestDataBlock447533()
]]></system-out>
</testcase>
<testcase name="readEthereumBlockInputFormatBlock1()" classname="org.zuinnote.hadoop.ethereum.format.mapreduce.EthereumFormatHadoopTest" time="0.006">
<system-out><![CDATA[
unique-id: [engine:junit-jupiter]/[class:org.zuinnote.hadoop.ethereum.format.mapreduce.EthereumFormatHadoopTest]/[method:readEthereumBlockInputFormatBlock1()]
display-name: readEthereumBlockInputFormatBlock1()
]]></system-out>
</testcase>
<testcase name="readEthereumBlockInputFormatBlock403419()" classname="org.zuinnote.hadoop.ethereum.format.mapreduce.EthereumFormatHadoopTest" time="0.004">
<system-out><![CDATA[
unique-id: [engine:junit-jupiter]/[class:org.zuinnote.hadoop.ethereum.format.mapreduce.EthereumFormatHadoopTest]/[method:readEthereumBlockInputFormatBlock403419()]
display-name: readEthereumBlockInputFormatBlock403419()
]]></system-out>
</testcase>
<testcase name="readEthereumBlockInputFormatBlock447533()" classname="org.zuinnote.hadoop.ethereum.format.mapreduce.EthereumFormatHadoopTest" time="0.002">
<system-out><![CDATA[
unique-id: [engine:junit-jupiter]/[class:org.zuinnote.hadoop.ethereum.format.mapreduce.EthereumFormatHadoopTest]/[method:readEthereumBlockInputFormatBlock447533()]
display-name: readEthereumBlockInputFormatBlock447533()
]]></system-out>
</testcase>
<testcase name="checkTestDataBlock1Available()" classname="org.zuinnote.hadoop.ethereum.format.mapreduce.EthereumFormatHadoopTest" time="0.001">
<system-out><![CDATA[
unique-id: [engine:junit-jupiter]/[class:org.zuinnote.hadoop.ethereum.format.mapreduce.EthereumFormatHadoopTest]/[method:checkTestDataBlock1Available()]
display-name: checkTestDataBlock1Available()
]]></system-out>
</testcase>
<testcase name="readEthereumBlockInputFormatBlock1346406()" classname="org.zuinnote.hadoop.ethereum.format.mapreduce.EthereumFormatHadoopTest" time="0.003">
<system-out><![CDATA[
unique-id: [engine:junit-jupiter]/[class:org.zuinnote.hadoop.ethereum.format.mapreduce.EthereumFormatHadoopTest]/[method:readEthereumBlockInputFormatBlock1346406()]
display-name: readEthereumBlockInputFormatBlock1346406()
]]></system-out>
</testcase>
<testcase name="checkTestDataBlock351000to3510010Available()" classname="org.zuinnote.hadoop.ethereum.format.mapreduce.EthereumFormatHadoopTest" time="0.001">
<system-out><![CDATA[
unique-id: [engine:junit-jupiter]/[class:org.zuinnote.hadoop.ethereum.format.mapreduce.EthereumFormatHadoopTest]/[method:checkTestDataBlock351000to3510010Available()]
display-name: checkTestDataBlock351000to3510010Available()
]]></system-out>
</testcase>
<testcase name="readEthereumBlockInputFormatBlock1346406Bzip2Compressed()" classname="org.zuinnote.hadoop.ethereum.format.mapreduce.EthereumFormatHadoopTest" time="0.004">
<system-out><![CDATA[
unique-id: [engine:junit-jupiter]/[class:org.zuinnote.hadoop.ethereum.format.mapreduce.EthereumFormatHadoopTest]/[method:readEthereumBlockInputFormatBlock1346406Bzip2Compressed()]
display-name: readEthereumBlockInputFormatBlock1346406Bzip2Compressed()
]]></system-out>
</testcase>
<testcase name="readEthereumBlockInputFormatBlock0to10()" classname="org.zuinnote.hadoop.ethereum.format.mapreduce.EthereumFormatHadoopTest" time="0.002">
<system-out><![CDATA[
unique-id: [engine:junit-jupiter]/[class:org.zuinnote.hadoop.ethereum.format.mapreduce.EthereumFormatHadoopTest]/[method:readEthereumBlockInputFormatBlock0to10()]
display-name: readEthereumBlockInputFormatBlock0to10()
]]></system-out>
</testcase>
<testcase name="checkTestDataGenesisBlockAvailable()" classname="org.zuinnote.hadoop.ethereum.format.mapreduce.EthereumFormatHadoopTest" time="0.001">
<system-out><![CDATA[
unique-id: [engine:junit-jupiter]/[class:org.zuinnote.hadoop.ethereum.format.mapreduce.EthereumFormatHadoopTest]/[method:checkTestDataGenesisBlockAvailable()]
display-name: checkTestDataGenesisBlockAvailable()
]]></system-out>
</testcase>
<testcase name="readEthereumBlockInputFormatBlock3510000to3510010()" classname="org.zuinnote.hadoop.ethereum.format.mapreduce.EthereumFormatHadoopTest" time="0.003">
<system-out><![CDATA[
unique-id: [engine:junit-jupiter]/[class:org.zuinnote.hadoop.ethereum.format.mapreduce.EthereumFormatHadoopTest]/[method:readEthereumBlockInputFormatBlock3510000to3510010()]
display-name: readEthereumBlockInputFormatBlock3510000to3510010()
]]></system-out>
</testcase>
<testcase name="readEthereumBlockInputFormatBlock1346406GzipCompressed()" classname="org.zuinnote.hadoop.ethereum.format.mapreduce.EthereumFormatHadoopTest" time="0.003">
<system-out><![CDATA[
unique-id: [engine:junit-jupiter]/[class:org.zuinnote.hadoop.ethereum.format.mapreduce.EthereumFormatHadoopTest]/[method:readEthereumBlockInputFormatBlock1346406GzipCompressed()]
display-name: readEthereumBlockInputFormatBlock1346406GzipCompressed()
]]></system-out>
</testcase>
<testcase name="readEthereumBlockInputFormatBlock3346406()" classname="org.zuinnote.hadoop.ethereum.format.mapreduce.EthereumFormatHadoopTest" time="0.006">
<system-out><![CDATA[
unique-id: [engine:junit-jupiter]/[class:org.zuinnote.hadoop.ethereum.format.mapreduce.EthereumFormatHadoopTest]/[method:readEthereumBlockInputFormatBlock3346406()]
display-name: readEthereumBlockInputFormatBlock3346406()
]]></system-out>
</testcase>
<testcase name="checkTestDataBlock1346406AGzipCompressedvailable()" classname="org.zuinnote.hadoop.ethereum.format.mapreduce.EthereumFormatHadoopTest" time="0.001">
<system-out><![CDATA[
unique-id: [engine:junit-jupiter]/[class:org.zuinnote.hadoop.ethereum.format.mapreduce.EthereumFormatHadoopTest]/[method:checkTestDataBlock1346406AGzipCompressedvailable()]
display-name: checkTestDataBlock1346406AGzipCompressedvailable()
]]></system-out>
</testcase>
<testcase name="checkTestDataBlock0to10Available()" classname="org.zuinnote.hadoop.ethereum.format.mapreduce.EthereumFormatHadoopTest" time="0.001">
<system-out><![CDATA[
unique-id: [engine:junit-jupiter]/[class:org.zuinnote.hadoop.ethereum.format.mapreduce.EthereumFormatHadoopTest]/[method:checkTestDataBlock0to10Available()]
display-name: checkTestDataBlock0to10Available()
]]></system-out>
</testcase>
<testcase name="checkTestDataBlock3346406Available()" classname="org.zuinnote.hadoop.ethereum.format.mapreduce.EthereumFormatHadoopTest" time="0.001">
<system-out><![CDATA[
unique-id: [engine:junit-jupiter]/[class:org.zuinnote.hadoop.ethereum.format.mapreduce.EthereumFormatHadoopTest]/[method:checkTestDataBlock3346406Available()]
display-name: checkTestDataBlock3346406Available()
]]></system-out>
</testcase>
<testcase name="readEthereumBlockInputFormatGenesisBlock()" classname="org.zuinnote.hadoop.ethereum.format.mapreduce.EthereumFormatHadoopTest" time="0.002">
<system-out><![CDATA[
unique-id: [engine:junit-jupiter]/[class:org.zuinnote.hadoop.ethereum.format.mapreduce.EthereumFormatHadoopTest]/[method:readEthereumBlockInputFormatGenesisBlock()]
display-name: readEthereumBlockInputFormatGenesisBlock()
]]></system-out>
</testcase>
<testcase name="checkTestDataBlock1346406Bzip2CompressedAvailable()" classname="org.zuinnote.hadoop.ethereum.format.mapreduce.EthereumFormatHadoopTest" time="0">
<system-out><![CDATA[
unique-id: [engine:junit-jupiter]/[class:org.zuinnote.hadoop.ethereum.format.mapreduce.EthereumFormatHadoopTest]/[method:checkTestDataBlock1346406Bzip2CompressedAvailable()]
display-name: checkTestDataBlock1346406Bzip2CompressedAvailable()
]]></system-out>
</testcase>
<testcase name="readNoAuxPowNamecoinGenesisBlock()" classname="org.zuinnote.hadoop.namecoin.format.common.NamecoinAuxPOWTest" time="0">
<system-out><![CDATA[
unique-id: [engine:junit-jupiter]/[class:org.zuinnote.hadoop.namecoin.format.common.NamecoinAuxPOWTest]/[method:readNoAuxPowNamecoinGenesisBlock()]
display-name: readNoAuxPowNamecoinGenesisBlock()
]]></system-out>
</testcase>
<testcase name="checkTestDataNamecoinRandomBlockAvailable()" classname="org.zuinnote.hadoop.namecoin.format.common.NamecoinAuxPOWTest" time="0">
<system-out><![CDATA[
unique-id: [engine:junit-jupiter]/[class:org.zuinnote.hadoop.namecoin.format.common.NamecoinAuxPOWTest]/[method:checkTestDataNamecoinRandomBlockAvailable()]
display-name: checkTestDataNamecoinRandomBlockAvailable()
]]></system-out>
</testcase>
<testcase name="checkTestDataNamecoinThreeDifferentOpinOneBlockAvailable()" classname="org.zuinnote.hadoop.namecoin.format.common.NamecoinAuxPOWTest" time="0">
<system-out><![CDATA[
unique-id: [engine:junit-jupiter]/[class:org.zuinnote.hadoop.namecoin.format.common.NamecoinAuxPOWTest]/[method:checkTestDataNamecoinThreeDifferentOpinOneBlockAvailable()]
display-name: checkTestDataNamecoinThreeDifferentOpinOneBlockAvailable()
]]></system-out>
</testcase>
<testcase name="readAuxPowNamecoinThreeDifferentOpinOneBlock()" classname="org.zuinnote.hadoop.namecoin.format.common.NamecoinAuxPOWTest" time="0.002">
<system-out><![CDATA[
unique-id: [engine:junit-jupiter]/[class:org.zuinnote.hadoop.namecoin.format.common.NamecoinAuxPOWTest]/[method:readAuxPowNamecoinThreeDifferentOpinOneBlock()]
display-name: readAuxPowNamecoinThreeDifferentOpinOneBlock()
]]></system-out>
</testcase>
<testcase name="checkTestDataNamecoinGenesisBlockAvailable()" classname="org.zuinnote.hadoop.namecoin.format.common.NamecoinAuxPOWTest" time="0">
<system-out><![CDATA[
unique-id: [engine:junit-jupiter]/[class:org.zuinnote.hadoop.namecoin.format.common.NamecoinAuxPOWTest]/[method:checkTestDataNamecoinGenesisBlockAvailable()]
display-name: checkTestDataNamecoinGenesisBlockAvailable()
]]></system-out>
</testcase>
<testcase name="extractNamecoinFieldUpdate()" classname="org.zuinnote.hadoop.namecoin.format.common.NamecoinUtilTest" time="0.001">
<system-out><![CDATA[
unique-id: [engine:junit-jupiter]/[class:org.zuinnote.hadoop.namecoin.format.common.NamecoinUtilTest]/[method:extractNamecoinFieldUpdate()]
display-name: extractNamecoinFieldUpdate()
]]></system-out>
</testcase>
<testcase name="getNameOperationPositive()" classname="org.zuinnote.hadoop.namecoin.format.common.NamecoinUtilTest" time="0">
<system-out><![CDATA[
unique-id: [engine:junit-jupiter]/[class:org.zuinnote.hadoop.namecoin.format.common.NamecoinUtilTest]/[method:getNameOperationPositive()]
display-name: getNameOperationPositive()
]]></system-out>
</testcase>
<testcase name="getNameOperationNegative()" classname="org.zuinnote.hadoop.namecoin.format.common.NamecoinUtilTest" time="0">
<system-out><![CDATA[
unique-id: [engine:junit-jupiter]/[class:org.zuinnote.hadoop.namecoin.format.common.NamecoinUtilTest]/[method:getNameOperationNegative()]
display-name: getNameOperationNegative()
]]></system-out>
</testcase>
<testcase name="extractNamecoinFieldInvalid()" classname="org.zuinnote.hadoop.namecoin.format.common.NamecoinUtilTest" time="0">
<system-out><![CDATA[
unique-id: [engine:junit-jupiter]/[class:org.zuinnote.hadoop.namecoin.format.common.NamecoinUtilTest]/[method:extractNamecoinFieldInvalid()]
display-name: extractNamecoinFieldInvalid()
]]></system-out>
</testcase>
<testcase name="extractNamecoinFieldFirstUpdate()" classname="org.zuinnote.hadoop.namecoin.format.common.NamecoinUtilTest" time="0">
<system-out><![CDATA[
unique-id: [engine:junit-jupiter]/[class:org.zuinnote.hadoop.namecoin.format.common.NamecoinUtilTest]/[method:extractNamecoinFieldFirstUpdate()]
display-name: extractNamecoinFieldFirstUpdate()
]]></system-out>
</testcase>
<system-out><![CDATA[
unique-id: [engine:junit-jupiter]
display-name: JUnit Jupiter
]]></system-out>
</testsuite>
